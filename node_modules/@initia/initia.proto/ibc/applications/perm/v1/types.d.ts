import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "ibc.applications.perm.v1";
/**
 * PermissionedRelayer is used to specifiy the permissioned relayer for
 * the specific port-id:channel-id pair.
 */
export interface PermissionedRelayer {
    portId: string;
    channelId: string;
    relayer: string;
}
export declare const PermissionedRelayer: {
    encode(message: PermissionedRelayer, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PermissionedRelayer;
    fromJSON(object: any): PermissionedRelayer;
    toJSON(message: PermissionedRelayer): unknown;
    create(base?: DeepPartial<PermissionedRelayer>): PermissionedRelayer;
    fromPartial(object: DeepPartial<PermissionedRelayer>): PermissionedRelayer;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
