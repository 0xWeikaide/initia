import { grpc } from "@improbable-eng/grpc-web";
import Long from "long";
import _m0 from "protobufjs/minimal";
import { Duration } from "../../../../google/protobuf/duration";
import { Params } from "./types";
export declare const protobufPackage = "ibc.applications.fetchprice.v1";
/** MsgActivate is the Msg/Activate request type. */
export interface MsgActivate {
    /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
    authority: string;
    sourcePort: string;
    sourceChannel: string;
    timeoutDuration?: Duration | undefined;
}
/**
 * MsgActivateResponse defines the response structure for executing a
 * MsgActivate message.
 */
export interface MsgActivateResponse {
}
/** MsgDeactivate is the Msg/Deactivate request type. */
export interface MsgDeactivate {
    /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
    authority: string;
}
/**
 * MsgDeactivateResponse defines the response structure for executing a
 * MsgDeactivate message.
 */
export interface MsgDeactivateResponse {
}
/** MsgUpdateParams is the Msg/UpdateParams request type. */
export interface MsgUpdateParams {
    /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
    authority: string;
    /**
     * params defines the x/fetchprice parameters to update.
     *
     * NOTE: All parameters must be supplied.
     */
    params?: Params | undefined;
}
/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 */
export interface MsgUpdateParamsResponse {
}
export declare const MsgActivate: {
    encode(message: MsgActivate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgActivate;
    fromJSON(object: any): MsgActivate;
    toJSON(message: MsgActivate): unknown;
    create(base?: DeepPartial<MsgActivate>): MsgActivate;
    fromPartial(object: DeepPartial<MsgActivate>): MsgActivate;
};
export declare const MsgActivateResponse: {
    encode(_: MsgActivateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgActivateResponse;
    fromJSON(_: any): MsgActivateResponse;
    toJSON(_: MsgActivateResponse): unknown;
    create(base?: DeepPartial<MsgActivateResponse>): MsgActivateResponse;
    fromPartial(_: DeepPartial<MsgActivateResponse>): MsgActivateResponse;
};
export declare const MsgDeactivate: {
    encode(message: MsgDeactivate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeactivate;
    fromJSON(object: any): MsgDeactivate;
    toJSON(message: MsgDeactivate): unknown;
    create(base?: DeepPartial<MsgDeactivate>): MsgDeactivate;
    fromPartial(object: DeepPartial<MsgDeactivate>): MsgDeactivate;
};
export declare const MsgDeactivateResponse: {
    encode(_: MsgDeactivateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeactivateResponse;
    fromJSON(_: any): MsgDeactivateResponse;
    toJSON(_: MsgDeactivateResponse): unknown;
    create(base?: DeepPartial<MsgDeactivateResponse>): MsgDeactivateResponse;
    fromPartial(_: DeepPartial<MsgDeactivateResponse>): MsgDeactivateResponse;
};
export declare const MsgUpdateParams: {
    encode(message: MsgUpdateParams, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams;
    fromJSON(object: any): MsgUpdateParams;
    toJSON(message: MsgUpdateParams): unknown;
    create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams;
    fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams;
};
export declare const MsgUpdateParamsResponse: {
    encode(_: MsgUpdateParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse;
    fromJSON(_: any): MsgUpdateParamsResponse;
    toJSON(_: MsgUpdateParamsResponse): unknown;
    create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse;
    fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse;
};
/** Msg defines the ibc/nft Msg service. */
export interface Msg {
    /** Activate price fetching ICQ process */
    Activate(request: DeepPartial<MsgActivate>, metadata?: grpc.Metadata): Promise<MsgActivateResponse>;
    /** Deactivate price fetching ICQ process */
    Deactivate(request: DeepPartial<MsgDeactivate>, metadata?: grpc.Metadata): Promise<MsgDeactivateResponse>;
    /**
     * UpdateParams defines an operation for updating the x/ibc/fetchprice module
     * parameters.
     */
    UpdateParams(request: DeepPartial<MsgUpdateParams>, metadata?: grpc.Metadata): Promise<MsgUpdateParamsResponse>;
}
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    constructor(rpc: Rpc);
    Activate(request: DeepPartial<MsgActivate>, metadata?: grpc.Metadata): Promise<MsgActivateResponse>;
    Deactivate(request: DeepPartial<MsgDeactivate>, metadata?: grpc.Metadata): Promise<MsgDeactivateResponse>;
    UpdateParams(request: DeepPartial<MsgUpdateParams>, metadata?: grpc.Metadata): Promise<MsgUpdateParamsResponse>;
}
export declare const MsgDesc: {
    serviceName: string;
};
export declare const MsgActivateDesc: UnaryMethodDefinitionish;
export declare const MsgDeactivateDesc: UnaryMethodDefinitionish;
export declare const MsgUpdateParamsDesc: UnaryMethodDefinitionish;
interface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {
    requestStream: any;
    responseStream: any;
}
type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;
interface Rpc {
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
export declare class GrpcWebImpl {
    private host;
    private options;
    constructor(host: string, options: {
        transport?: grpc.TransportFactory;
        debug?: boolean;
        metadata?: grpc.Metadata;
        upStreamRetryCodes?: number[];
    });
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export declare class GrpcWebError extends globalThis.Error {
    code: grpc.Code;
    metadata: grpc.Metadata;
    constructor(message: string, code: grpc.Code, metadata: grpc.Metadata);
}
export {};
