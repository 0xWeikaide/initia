import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "slinky.incentives.v1";
/**
 * BadPriceIncentive is a message that contains the information about a bad
 * price that was submitted by a validator.
 *
 * NOTE: This is an example of a bad price incentive. It is not used in
 * production.
 */
export interface BadPriceIncentive {
    /** Validator is the address of the validator that submitted the bad price. */
    validator: string;
    /** Amount is the amount to slash. */
    amount: string;
}
export declare const BadPriceIncentive: {
    encode(message: BadPriceIncentive, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BadPriceIncentive;
    fromJSON(object: any): BadPriceIncentive;
    toJSON(message: BadPriceIncentive): unknown;
    create(base?: DeepPartial<BadPriceIncentive>): BadPriceIncentive;
    fromPartial(object: DeepPartial<BadPriceIncentive>): BadPriceIncentive;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
