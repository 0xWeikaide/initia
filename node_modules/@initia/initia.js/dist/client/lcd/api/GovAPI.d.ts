import { BaseAPI } from './BaseAPI';
import { Proposal, Deposit, Vote, GovParams } from '../../../core';
import { APIParams, Pagination, PaginationOptions } from '../APIRequester';
export declare class GovAPI extends BaseAPI {
    /**
     * Gets all proposals.
     */
    proposals(params?: Partial<PaginationOptions & APIParams>): Promise<[Proposal[], Pagination]>;
    /**
     * Get a specific proposal by its ID
     * @param proposalId proposal's ID
     */
    proposal(proposalId: number, params?: APIParams): Promise<Proposal>;
    /**
     * Get the deposits for a proposal
     * @param proposalId proposal's ID
     */
    deposits(proposalId: number, _params?: Partial<PaginationOptions & APIParams>): Promise<[Deposit[], Pagination]>;
    /**
     * Get the current votes for a proposal
     * @param proposalId proposal's ID
     */
    votes(proposalId: number, _params?: Partial<PaginationOptions & APIParams>): Promise<[Vote[], Pagination]>;
    /**
     * Gets the current tally for a proposal.
     * @param proposalId proposal's ID
     */
    tally(proposalId: number, params?: APIParams): Promise<Proposal.FinalTallyResult>;
    /** Gets the Gov module's current parameters  */
    parameters(params?: APIParams): Promise<GovParams>;
    emergencyProposals(params?: Partial<PaginationOptions & APIParams>): Promise<[Proposal[], Pagination]>;
}
