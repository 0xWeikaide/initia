"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenfactoryAPI = void 0;
const core_1 = require("../../../core");
const BaseAPI_1 = require("./BaseAPI");
class TokenfactoryAPI extends BaseAPI_1.BaseAPI {
    authorityMetadata(denom, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/miniwasm/tokenfactory/v1/denoms/${denom}/authority_metadata`, params)
                .then(d => d.authority_metadata);
        });
    }
    beforeSendHookAddr(denom, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/miniwasm/tokenfactory/v1/denoms/${denom}/before_send_hook`, params)
                .then(d => d.cosmwasm_address);
        });
    }
    denomsFromCreator(creator, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/miniwasm/tokenfactory/v1/denoms_from_creator/${creator}`, params)
                .then(d => d.denoms);
        });
    }
    parameters(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/miniwasm/tokenfactory/v1/params`, params)
                .then(({ params: d }) => core_1.TokenfactoryParams.fromData(d));
        });
    }
}
exports.TokenfactoryAPI = TokenfactoryAPI;
//# sourceMappingURL=TokenfactoryAPI.js.map