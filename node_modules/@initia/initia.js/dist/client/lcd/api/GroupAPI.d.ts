import { BaseAPI } from './BaseAPI';
import { AccAddress, GroupInfo, GroupMember, GroupPolicyInfo, GroupProposal, GroupVote } from '../../../core';
import { APIParams, Pagination, PaginationOptions } from '../APIRequester';
export declare class GroupAPI extends BaseAPI {
    groupInfo(groupId: number): Promise<GroupInfo>;
    groupPolicyInfo(address: AccAddress): Promise<GroupPolicyInfo>;
    groupMembers(groupId: number, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupMember[], Pagination]>;
    groupsByAdmin(admin: AccAddress, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupInfo[], Pagination]>;
    groupPoliciesByGroup(groupId: number, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupPolicyInfo[], Pagination]>;
    groupPoliciesByAdmin(admin: AccAddress, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupPolicyInfo[], Pagination]>;
    proposal(proposalId: number): Promise<GroupProposal>;
    proposalsByGroupPolicy(address: AccAddress, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupProposal[], Pagination]>;
    voteByProposalVoter(proposalId: number, voter: AccAddress): Promise<GroupVote>;
    votesByProposal(proposalId: number, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupVote[], Pagination]>;
    votesByVoter(voter: AccAddress, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupVote[], Pagination]>;
    groupsByMember(address: AccAddress, params?: Partial<PaginationOptions & APIParams>): Promise<[GroupInfo[], Pagination]>;
    tally(proposalId: number): Promise<GroupProposal.FinalTallyResult>;
    groups(params?: Partial<PaginationOptions & APIParams>): Promise<[GroupInfo[], Pagination]>;
}
