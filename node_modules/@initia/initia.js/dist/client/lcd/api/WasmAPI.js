"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WasmAPI = void 0;
const BaseAPI_1 = require("./BaseAPI");
const core_1 = require("../../../core");
const types_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/types");
class WasmAPI extends BaseAPI_1.BaseAPI {
    contractInfo(address, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contract/${address}`, params)
                .then(d => ({
                code_id: Number.parseInt(d.contract_info.code_id),
                creator: d.contract_info.creator,
                admin: d.contract_info.admin,
                label: d.contract_info.label,
                created: core_1.AbsoluteTxPosition.fromData(d.contract_info.created),
                ibc_port_id: d.contract_info.ibc_port_id,
                extension: d.contract_info.extension,
            }));
        });
    }
    contractHistory(address, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contract/${address}/history`, params)
                .then(d => [
                d.entries.map(entry => ({
                    operation: (0, types_1.contractCodeHistoryOperationTypeFromJSON)(entry.operation),
                    code_id: Number.parseInt(entry.code_id),
                    updated: core_1.AbsoluteTxPosition.fromData(entry.updated),
                    msg: entry.msg,
                })),
                d.pagination,
            ]);
        });
    }
    contractsByCode(codeId, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/code/${codeId}/contracts`, params)
                .then(d => [d.contracts, d.pagination]);
        });
    }
    allContractState(address, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contract/${address}/state`, params)
                .then(d => [d.models, d.pagination]);
        });
    }
    rawContractState(address, queryData, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contract/${address}/raw/${queryData}`, params)
                .then(d => d.data);
        });
    }
    smartContractState(address, queryData, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contract/${address}/smart/${queryData}`, params)
                .then(res => res.data);
        });
    }
    codeInfos(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/code`, params)
                .then(d => [
                d.code_infos.map(info => ({
                    code_id: Number.parseInt(info.code_id),
                    creator: info.creator,
                    data_hash: info.data_hash,
                    instantiate_permission: core_1.AccessConfig.fromData(info.instantiate_permission),
                })),
                d.pagination,
            ]);
        });
    }
    codeInfo(codeId, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/code/${codeId}`, params)
                .then(d => ({
                code_info: {
                    code_id: Number.parseInt(d.code_info.code_id),
                    creator: d.code_info.creator,
                    data_hash: d.code_info.data_hash,
                    instantiate_permission: core_1.AccessConfig.fromData(d.code_info.instantiate_permission),
                },
                data: d.data,
            }));
        });
    }
    pinnedCodes(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/codes/pinned`, params)
                .then(d => [d.code_ids.map(id => Number.parseInt(id)), d.pagination]);
        });
    }
    parameters(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/codes/params`, params)
                .then(d => core_1.WasmParams.fromData(d.params));
        });
    }
    contractsByCreator(creator, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmwasm/wasm/v1/contracts/creator/${creator}`, params)
                .then(d => [d.contract_addresses, d.pagination]);
        });
    }
}
exports.WasmAPI = WasmAPI;
//# sourceMappingURL=WasmAPI.js.map