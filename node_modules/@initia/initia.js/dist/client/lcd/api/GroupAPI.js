"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupAPI = void 0;
const BaseAPI_1 = require("./BaseAPI");
const core_1 = require("../../../core");
class GroupAPI extends BaseAPI_1.BaseAPI {
    groupInfo(groupId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/group_info/${groupId}`)
                .then(d => core_1.GroupInfo.fromData(d.info));
        });
    }
    groupPolicyInfo(address) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/group_policy_info/${address}`)
                .then(d => core_1.GroupPolicyInfo.fromData(d.info));
        });
    }
    groupMembers(groupId, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/group_members/${groupId}`, params)
                .then(d => [d.members.map(core_1.GroupMember.fromData), d.pagination]);
        });
    }
    groupsByAdmin(admin, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/groups_by_admin/${admin}`, params)
                .then(d => [d.groups.map(core_1.GroupInfo.fromData), d.pagination]);
        });
    }
    groupPoliciesByGroup(groupId, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/group_policies_by_group/${groupId}`, params)
                .then(d => [
                d.group_policies.map(core_1.GroupPolicyInfo.fromData),
                d.pagination,
            ]);
        });
    }
    groupPoliciesByAdmin(admin, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/group_policies_by_admin/${admin}`, params)
                .then(d => [
                d.group_policies.map(core_1.GroupPolicyInfo.fromData),
                d.pagination,
            ]);
        });
    }
    proposal(proposalId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/proposal/${proposalId}`)
                .then(d => core_1.GroupProposal.fromData(d.proposal));
        });
    }
    proposalsByGroupPolicy(address, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/proposals_by_group_policy/${address}`, params)
                .then(d => [d.proposals.map(core_1.GroupProposal.fromData), d.pagination]);
        });
    }
    voteByProposalVoter(proposalId, voter) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/vote_by_proposal_voter/${proposalId}/${voter}`)
                .then(d => core_1.GroupVote.fromData(d.vote));
        });
    }
    votesByProposal(proposalId, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/votes_by_proposal/${proposalId}`, params)
                .then(d => [d.votes.map(core_1.GroupVote.fromData), d.pagination]);
        });
    }
    votesByVoter(voter, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/votes_by_voter/${voter}`, params)
                .then(d => [d.votes.map(core_1.GroupVote.fromData), d.pagination]);
        });
    }
    groupsByMember(address, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/groups_by_member/${address}`, params)
                .then(d => [d.groups.map(core_1.GroupInfo.fromData), d.pagination]);
        });
    }
    tally(proposalId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/proposals/${proposalId}/tally`)
                .then(d => d.tally);
        });
    }
    groups(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/cosmos/group/v1/groups`, params)
                .then(d => [d.groups.map(core_1.GroupInfo.fromData), d.pagination]);
        });
    }
}
exports.GroupAPI = GroupAPI;
//# sourceMappingURL=GroupAPI.js.map