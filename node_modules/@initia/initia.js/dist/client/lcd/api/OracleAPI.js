"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OracleAPI = void 0;
const BaseAPI_1 = require("./BaseAPI");
const core_1 = require("../../../core");
class OracleAPI extends BaseAPI_1.BaseAPI {
    currencyPairs(params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/slinky/oracle/v1/get_all_tickers`, params)
                .then(d => d.currency_pairs.map(core_1.CurrencyPair.fromData));
        });
    }
    price(pair, params = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.c
                .get(`/slinky/oracle/v1/get_price`, Object.assign(Object.assign({}, params), { currency_pair_id: pair.toString() }))
                .then(d => core_1.QuotePrice.fromData(d.price));
        });
    }
}
exports.OracleAPI = OracleAPI;
//# sourceMappingURL=OracleAPI.js.map