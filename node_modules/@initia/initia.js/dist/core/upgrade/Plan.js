"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plan = void 0;
const json_1 = require("../../util/json");
const upgrade_1 = require("@initia/initia.proto/cosmos/upgrade/v1beta1/upgrade");
const long_1 = __importDefault(require("long"));
/*
 * Plan specifies information about a planned upgrade and when it should occur.
 */
class Plan extends json_1.JSONSerializable {
    /**
     * @param name the name for the upgrade
     * @param height the height at which the upgrade must be performed
     * @param info any application specific upgrade info to be included on-chain
     */
    constructor(name, height, info) {
        super();
        this.name = name;
        this.height = height;
        this.info = info;
    }
    static fromAmino(data) {
        const { name, height, info } = data;
        return new Plan(name, Number.parseInt(height), info);
    }
    toAmino() {
        const { name, height, info } = this;
        return {
            name,
            height: height.toString(),
            info,
        };
    }
    static fromData(data) {
        const { name, height, info } = data;
        return new Plan(name, Number.parseInt(height), info);
    }
    toData() {
        const { name, height, info } = this;
        return {
            name,
            height: height.toString(),
            info,
        };
    }
    static fromProto(proto) {
        return new Plan(proto.name, proto.height.toNumber(), proto.info);
    }
    toProto() {
        const { name, height, info } = this;
        return upgrade_1.Plan.fromPartial({
            name,
            height: long_1.default.fromNumber(height),
            info,
        });
    }
}
exports.Plan = Plan;
//# sourceMappingURL=Plan.js.map