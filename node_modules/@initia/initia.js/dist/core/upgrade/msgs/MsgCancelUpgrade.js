"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgCancelUpgrade = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/upgrade/v1beta1/tx");
/**
 * MsgCancelUpgrade is a governance operation for cancelling a previously approved software upgrade
 */
class MsgCancelUpgrade extends json_1.JSONSerializable {
    /**
     *
     * @param authority the address that controls the module
     */
    constructor(authority) {
        super();
        this.authority = authority;
    }
    static fromAmino(data) {
        const { value: { authority }, } = data;
        return new MsgCancelUpgrade(authority);
    }
    toAmino() {
        const { authority } = this;
        return {
            type: 'cosmos-sdk/MsgCancelUpgrade',
            value: { authority },
        };
    }
    static fromData(data) {
        const { authority } = data;
        return new MsgCancelUpgrade(authority);
    }
    toData() {
        const { authority } = this;
        return {
            '@type': '/cosmos.upgrade.v1beta1.MsgCancelUpgrade',
            authority,
        };
    }
    static fromProto(proto) {
        return new MsgCancelUpgrade(proto.authority);
    }
    toProto() {
        const { authority } = this;
        return tx_1.MsgCancelUpgrade.fromPartial({
            authority,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.upgrade.v1beta1.MsgCancelUpgrade',
            value: tx_1.MsgCancelUpgrade.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgCancelUpgrade.fromProto(tx_1.MsgCancelUpgrade.decode(msgAny.value));
    }
}
exports.MsgCancelUpgrade = MsgCancelUpgrade;
//# sourceMappingURL=MsgCancelUpgrade.js.map