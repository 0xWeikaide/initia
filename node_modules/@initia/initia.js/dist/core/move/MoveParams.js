"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MoveParams = void 0;
const json_1 = require("../../util/json");
const types_1 = require("@initia/initia.proto/initia/move/v1/types");
class MoveParams extends json_1.JSONSerializable {
    /**
     * @param base_denom
     * @param base_min_gas_price
     * @param contract_shared_revenue_ratio the percentage of fees distributed to developers
     * @param allowed_publishers list of addresses with permission to distribute contracts, empty list is interpreted as allowing anyone to distribute
     */
    constructor(base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers) {
        super();
        this.base_denom = base_denom;
        this.base_min_gas_price = base_min_gas_price;
        this.contract_shared_revenue_ratio = contract_shared_revenue_ratio;
        this.allowed_publishers = allowed_publishers;
    }
    static fromAmino(data) {
        const { value: { base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers, }, } = data;
        return new MoveParams(base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers);
    }
    toAmino() {
        const { base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers, } = this;
        return {
            type: 'move/Params',
            value: {
                base_denom,
                base_min_gas_price,
                contract_shared_revenue_ratio,
                allowed_publishers,
            },
        };
    }
    static fromData(data) {
        const { base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers, } = data;
        return new MoveParams(base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers);
    }
    toData() {
        const { base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers, } = this;
        return {
            '@type': '/initia.move.v1.Params',
            base_denom,
            base_min_gas_price,
            contract_shared_revenue_ratio,
            allowed_publishers,
        };
    }
    static fromProto(data) {
        return new MoveParams(data.baseDenom, data.baseMinGasPrice, data.contractSharedRevenueRatio, data.allowedPublishers);
    }
    toProto() {
        const { base_denom, base_min_gas_price, contract_shared_revenue_ratio, allowed_publishers, } = this;
        return types_1.Params.fromPartial({
            baseDenom: base_denom,
            baseMinGasPrice: base_min_gas_price,
            contractSharedRevenueRatio: contract_shared_revenue_ratio,
            allowedPublishers: allowed_publishers,
        });
    }
}
exports.MoveParams = MoveParams;
//# sourceMappingURL=MoveParams.js.map