"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgGovExecute = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/initia/move/v1/tx");
class MsgGovExecute extends json_1.JSONSerializable {
    /**
     * @param authority the address that controls the module
     * @param sender the actor that signed the messages
     * @param module_address module deployer address
     * @param module_name name of module to execute
     * @param function_name name of function to execute
     * @param type_args type arguments of function to execute
     * @param args arguments of function to execute
     */
    constructor(authority, sender, module_address, module_name, function_name, type_args = [], args = []) {
        super();
        this.authority = authority;
        this.sender = sender;
        this.module_address = module_address;
        this.module_name = module_name;
        this.function_name = function_name;
        this.type_args = type_args;
        this.args = args;
    }
    static fromAmino(data) {
        const { value: { authority, sender, module_address, module_name, function_name, type_args, args, }, } = data;
        return new MsgGovExecute(authority, sender, module_address, module_name, function_name, type_args !== null && type_args !== void 0 ? type_args : [], args !== null && args !== void 0 ? args : []);
    }
    toAmino() {
        const { authority, sender, module_address, module_name, function_name, type_args, args, } = this;
        return {
            type: 'move/MsgGovExecute',
            value: {
                authority,
                sender,
                module_address,
                module_name,
                function_name,
                type_args: type_args.length === 0 ? undefined : type_args,
                args: args.length === 0 ? undefined : args,
            },
        };
    }
    static fromData(data) {
        const { authority, sender, module_address, module_name, function_name, type_args, args, } = data;
        return new MsgGovExecute(authority, sender, module_address, module_name, function_name, type_args, args);
    }
    toData() {
        const { authority, sender, module_address, module_name, function_name, type_args, args, } = this;
        return {
            '@type': '/initia.move.v1.MsgGovExecute',
            authority,
            sender,
            module_address,
            module_name,
            function_name,
            type_args,
            args,
        };
    }
    static fromProto(data) {
        return new MsgGovExecute(data.authority, data.sender, data.moduleAddress, data.moduleName, data.functionName, data.typeArgs, data.args.map(arg => Buffer.from(arg).toString('base64')));
    }
    toProto() {
        const { authority, sender, module_address, module_name, function_name, type_args, args, } = this;
        return tx_1.MsgGovExecute.fromPartial({
            authority,
            sender,
            moduleAddress: module_address,
            moduleName: module_name,
            functionName: function_name,
            typeArgs: type_args,
            args: args.map(arg => Buffer.from(arg, 'base64')),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/initia.move.v1.MsgGovExecute',
            value: tx_1.MsgGovExecute.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgGovExecute.fromProto(tx_1.MsgGovExecute.decode(msgAny.value));
    }
}
exports.MsgGovExecute = MsgGovExecute;
//# sourceMappingURL=MsgGovExecute.js.map