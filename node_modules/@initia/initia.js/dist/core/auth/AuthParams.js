"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthParams = void 0;
const json_1 = require("../../util/json");
const auth_1 = require("@initia/initia.proto/cosmos/auth/v1beta1/auth");
const long_1 = __importDefault(require("long"));
class AuthParams extends json_1.JSONSerializable {
    /**
     * @param max_memo_characters
     * @param tx_sig_limit
     * @param tx_size_cost_per_byte
     * @param sig_verify_cost_ed25519
     * @param sig_verify_cost_secp256k1
     */
    constructor(max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1) {
        super();
        this.max_memo_characters = max_memo_characters;
        this.tx_sig_limit = tx_sig_limit;
        this.tx_size_cost_per_byte = tx_size_cost_per_byte;
        this.sig_verify_cost_ed25519 = sig_verify_cost_ed25519;
        this.sig_verify_cost_secp256k1 = sig_verify_cost_secp256k1;
    }
    static fromAmino(data) {
        const { value: { max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1, }, } = data;
        return new AuthParams(Number.parseInt(max_memo_characters), Number.parseInt(tx_sig_limit), Number.parseInt(tx_size_cost_per_byte), Number.parseInt(sig_verify_cost_ed25519), Number.parseInt(sig_verify_cost_secp256k1));
    }
    toAmino() {
        const { max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1, } = this;
        return {
            type: 'cosmos-sdk/x/auth/Params',
            value: {
                max_memo_characters: max_memo_characters.toString(),
                tx_sig_limit: tx_sig_limit.toString(),
                tx_size_cost_per_byte: tx_size_cost_per_byte.toString(),
                sig_verify_cost_ed25519: sig_verify_cost_ed25519.toString(),
                sig_verify_cost_secp256k1: sig_verify_cost_secp256k1.toString(),
            },
        };
    }
    static fromData(data) {
        const { max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1, } = data;
        return new AuthParams(Number.parseInt(max_memo_characters), Number.parseInt(tx_sig_limit), Number.parseInt(tx_size_cost_per_byte), Number.parseInt(sig_verify_cost_ed25519), Number.parseInt(sig_verify_cost_secp256k1));
    }
    toData() {
        const { max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1, } = this;
        return {
            '@type': '/cosmos.auth.v1beta1.Params',
            max_memo_characters: max_memo_characters.toString(),
            tx_sig_limit: tx_sig_limit.toString(),
            tx_size_cost_per_byte: tx_size_cost_per_byte.toString(),
            sig_verify_cost_ed25519: sig_verify_cost_ed25519.toString(),
            sig_verify_cost_secp256k1: sig_verify_cost_secp256k1.toString(),
        };
    }
    static fromProto(data) {
        return new AuthParams(data.maxMemoCharacters.toNumber(), data.txSigLimit.toNumber(), data.txSizeCostPerByte.toNumber(), data.sigVerifyCostEd25519.toNumber(), data.sigVerifyCostSecp256k1.toNumber());
    }
    toProto() {
        const { max_memo_characters, tx_sig_limit, tx_size_cost_per_byte, sig_verify_cost_ed25519, sig_verify_cost_secp256k1, } = this;
        return auth_1.Params.fromPartial({
            maxMemoCharacters: long_1.default.fromNumber(max_memo_characters),
            txSigLimit: long_1.default.fromNumber(tx_sig_limit),
            txSizeCostPerByte: long_1.default.fromNumber(tx_size_cost_per_byte),
            sigVerifyCostEd25519: long_1.default.fromNumber(sig_verify_cost_ed25519),
            sigVerifyCostSecp256k1: long_1.default.fromNumber(sig_verify_cost_secp256k1),
        });
    }
}
exports.AuthParams = AuthParams;
//# sourceMappingURL=AuthParams.js.map