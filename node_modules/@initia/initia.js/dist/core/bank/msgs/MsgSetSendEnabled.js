"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSetSendEnabled = void 0;
const json_1 = require("../../../util/json");
const SendEnabled_1 = require("../SendEnabled");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/bank/v1beta1/tx");
class MsgSetSendEnabled extends json_1.JSONSerializable {
    /**
     * @param authority
     * @param send_enabled the list of entries to add or update
     * @param use_default_for a list of denoms that should use the params.default_send_enabled value
     */
    constructor(authority, send_enabled, use_default_for) {
        super();
        this.authority = authority;
        this.send_enabled = send_enabled;
        this.use_default_for = use_default_for;
    }
    static fromAmino(data) {
        const { value: { authority, send_enabled, use_default_for }, } = data;
        return new MsgSetSendEnabled(authority, send_enabled.map(SendEnabled_1.SendEnabled.fromAmino), use_default_for);
    }
    toAmino() {
        const { authority, send_enabled, use_default_for } = this;
        return {
            type: 'cosmos-sdk/MsgSetSendEnabled',
            value: {
                authority,
                send_enabled: send_enabled.map(d => d.toAmino()),
                use_default_for,
            },
        };
    }
    static fromData(data) {
        const { authority, send_enabled, use_default_for } = data;
        return new MsgSetSendEnabled(authority, send_enabled.map(SendEnabled_1.SendEnabled.fromData), use_default_for);
    }
    toData() {
        const { authority, send_enabled, use_default_for } = this;
        return {
            '@type': '/cosmos.bank.v1beta1.MsgSetSendEnabled',
            authority,
            send_enabled: send_enabled.map(d => d.toData()),
            use_default_for,
        };
    }
    static fromProto(data) {
        return new MsgSetSendEnabled(data.authority, data.sendEnabled.map(SendEnabled_1.SendEnabled.fromProto), data.useDefaultFor);
    }
    toProto() {
        const { authority, send_enabled, use_default_for } = this;
        return tx_1.MsgSetSendEnabled.fromPartial({
            authority,
            sendEnabled: send_enabled.map(d => d.toProto()),
            useDefaultFor: use_default_for,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.bank.v1beta1.MsgSetSendEnabled',
            value: tx_1.MsgSetSendEnabled.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgSetSendEnabled.fromProto(tx_1.MsgSetSendEnabled.decode(msgAny.value));
    }
}
exports.MsgSetSendEnabled = MsgSetSendEnabled;
//# sourceMappingURL=MsgSetSendEnabled.js.map