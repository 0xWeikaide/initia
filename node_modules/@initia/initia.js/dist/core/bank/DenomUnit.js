"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DenomUnit = void 0;
const json_1 = require("../../util/json");
const bank_1 = require("@initia/initia.proto/cosmos/bank/v1beta1/bank");
class DenomUnit extends json_1.JSONSerializable {
    /**
     * @param denom the string name of the given denom unit
     * @param exponent power of 10 exponent that one must raise the base_denom to in order to equal the given DenomUnit's denom
     * @param aliases list of string aliases for the given denom
     */
    constructor(denom, exponent, aliases) {
        super();
        this.denom = denom;
        this.exponent = exponent;
        this.aliases = aliases;
    }
    static fromAmino(data) {
        const { denom, exponent, aliases } = data;
        return new DenomUnit(denom, Number.parseInt(exponent), aliases);
    }
    toAmino() {
        const { denom, exponent, aliases } = this;
        return {
            denom,
            exponent: exponent.toString(),
            aliases,
        };
    }
    static fromData(data) {
        const { denom, exponent, aliases } = data;
        return new DenomUnit(denom, Number.parseInt(exponent), aliases);
    }
    toData() {
        const { denom, exponent, aliases } = this;
        return {
            denom,
            exponent: exponent.toString(),
            aliases,
        };
    }
    static fromProto(data) {
        return new DenomUnit(data.denom, data.exponent, data.aliases);
    }
    toProto() {
        const { denom, exponent, aliases } = this;
        return bank_1.DenomUnit.fromPartial({
            denom,
            exponent,
            aliases,
        });
    }
}
exports.DenomUnit = DenomUnit;
//# sourceMappingURL=DenomUnit.js.map