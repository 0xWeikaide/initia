"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuotePrice = void 0;
const json_1 = require("../../util/json");
const genesis_1 = require("@initia/initia.proto/slinky/oracle/v1/genesis");
const long_1 = __importDefault(require("long"));
class QuotePrice extends json_1.JSONSerializable {
    /**
     * @param price
     * @param block_timestamp tracks the block height associated with this price update
     * @param block_height block height of provider chain
     */
    constructor(price, block_timestamp, block_height) {
        super();
        this.price = price;
        this.block_timestamp = block_timestamp;
        this.block_height = block_height;
    }
    static fromAmino(data) {
        const { price, block_timestamp, block_height } = data;
        return new QuotePrice(price, new Date(block_timestamp), Number.parseInt(block_height));
    }
    toAmino() {
        const { price, block_timestamp, block_height } = this;
        return {
            price,
            block_timestamp: block_timestamp.toISOString(),
            block_height: block_height.toString(),
        };
    }
    static fromData(data) {
        const { price, block_timestamp, block_height } = data;
        return new QuotePrice(price, new Date(block_timestamp), Number.parseInt(block_height));
    }
    toData() {
        const { price, block_timestamp, block_height } = this;
        return {
            price,
            block_timestamp: block_timestamp.toISOString(),
            block_height: block_height.toString(),
        };
    }
    static fromProto(proto) {
        return new QuotePrice(proto.price, proto.blockTimestamp, proto.blockHeight.toNumber());
    }
    toProto() {
        const { price, block_timestamp, block_height } = this;
        return genesis_1.QuotePrice.fromPartial({
            price,
            blockTimestamp: block_timestamp,
            blockHeight: long_1.default.fromNumber(block_height),
        });
    }
}
exports.QuotePrice = QuotePrice;
//# sourceMappingURL=QuotePrice.js.map