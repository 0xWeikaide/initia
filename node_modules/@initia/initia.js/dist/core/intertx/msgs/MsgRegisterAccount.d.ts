import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgRegisterAccount as MsgRegisterAccount_pb } from '@initia/initia.proto/initia/intertx/v1/tx';
export declare class MsgRegisterAccount extends JSONSerializable<MsgRegisterAccount.Amino, MsgRegisterAccount.Data, MsgRegisterAccount.Proto> {
    owner: AccAddress;
    connection_id: string;
    version: string;
    /**
     * @param owner
     * @param connection_id
     * @param version
     */
    constructor(owner: AccAddress, connection_id: string, version: string);
    static fromAmino(data: MsgRegisterAccount.Amino): MsgRegisterAccount;
    toAmino(): MsgRegisterAccount.Amino;
    static fromData(data: MsgRegisterAccount.Data): MsgRegisterAccount;
    toData(): MsgRegisterAccount.Data;
    static fromProto(proto: MsgRegisterAccount.Proto): MsgRegisterAccount;
    toProto(): MsgRegisterAccount.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgRegisterAccount;
}
export declare namespace MsgRegisterAccount {
    interface Amino {
        type: 'intertx/MsgRegisterAccount';
        value: {
            owner: AccAddress;
            connection_id: string;
            version: string;
        };
    }
    interface Data {
        '@type': '/initia.intertx.v1.MsgRegisterAccount';
        owner: AccAddress;
        connection_id: string;
        version: string;
    }
    type Proto = MsgRegisterAccount_pb;
}
