import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Coin } from '../../Coin';
import { MsgFinalizeTokenWithdrawal as MsgFinalizeTokenWithdrawal_pb } from '@initia/opinit.proto/opinit/ophost/v1/tx';
import { Any } from '@initia/initia.proto/google/protobuf/any';
export declare class MsgFinalizeTokenWithdrawal extends JSONSerializable<MsgFinalizeTokenWithdrawal.Amino, MsgFinalizeTokenWithdrawal.Data, MsgFinalizeTokenWithdrawal.Proto> {
    bridge_id: number;
    output_index: number;
    withdrawal_proofs: string[];
    sender: AccAddress;
    receiver: AccAddress;
    sequence: number;
    amount: Coin;
    version: string;
    state_root: string;
    storage_root: string;
    latest_block_hash: string;
    /**
     * @param bridge_id
     * @param output_index
     * @param withdrawal_proofs
     * @param sender
     * @param receiver
     * @param sequence
     * @param amount
     * @param version
     * @param state_root
     * @param storage_root
     * @param latest_block_hash
     */
    constructor(bridge_id: number, output_index: number, withdrawal_proofs: string[], sender: AccAddress, receiver: AccAddress, sequence: number, amount: Coin, version: string, state_root: string, storage_root: string, latest_block_hash: string);
    static fromAmino(data: MsgFinalizeTokenWithdrawal.Amino): MsgFinalizeTokenWithdrawal;
    toAmino(): MsgFinalizeTokenWithdrawal.Amino;
    static fromData(data: MsgFinalizeTokenWithdrawal.Data): MsgFinalizeTokenWithdrawal;
    toData(): MsgFinalizeTokenWithdrawal.Data;
    static fromProto(data: MsgFinalizeTokenWithdrawal.Proto): MsgFinalizeTokenWithdrawal;
    toProto(): MsgFinalizeTokenWithdrawal.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgFinalizeTokenWithdrawal;
}
export declare namespace MsgFinalizeTokenWithdrawal {
    interface Amino {
        type: 'ophost/MsgFinalizeTokenWithdrawal';
        value: {
            bridge_id: string;
            output_index: string;
            withdrawal_proofs: string[];
            sender: AccAddress;
            receiver: AccAddress;
            sequence: string;
            amount: Coin.Amino;
            version: string;
            state_root: string;
            storage_root: string;
            latest_block_hash: string;
        };
    }
    interface Data {
        '@type': '/opinit.ophost.v1.MsgFinalizeTokenWithdrawal';
        bridge_id: string;
        output_index: string;
        withdrawal_proofs: string[];
        sender: AccAddress;
        receiver: AccAddress;
        sequence: string;
        amount: Coin.Data;
        version: string;
        state_root: string;
        storage_root: string;
        latest_block_hash: string;
    }
    type Proto = MsgFinalizeTokenWithdrawal_pb;
}
