"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgDeleteOutput = void 0;
const json_1 = require("../../../util/json");
const tx_1 = require("@initia/opinit.proto/opinit/ophost/v1/tx");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const long_1 = __importDefault(require("long"));
class MsgDeleteOutput extends json_1.JSONSerializable {
    /**
     * @param challenger
     * @param bridge_id
     * @param output_index
     */
    constructor(challenger, bridge_id, output_index) {
        super();
        this.challenger = challenger;
        this.bridge_id = bridge_id;
        this.output_index = output_index;
    }
    static fromAmino(data) {
        const { value: { challenger, bridge_id, output_index }, } = data;
        return new MsgDeleteOutput(challenger, Number.parseInt(bridge_id), Number.parseInt(output_index));
    }
    toAmino() {
        const { challenger, bridge_id, output_index } = this;
        return {
            type: 'ophost/MsgDeleteOutput',
            value: {
                challenger,
                bridge_id: bridge_id.toString(),
                output_index: output_index.toString(),
            },
        };
    }
    static fromData(data) {
        const { challenger, bridge_id, output_index } = data;
        return new MsgDeleteOutput(challenger, Number.parseInt(bridge_id), Number.parseInt(output_index));
    }
    toData() {
        const { challenger, bridge_id, output_index } = this;
        return {
            '@type': '/opinit.ophost.v1.MsgDeleteOutput',
            challenger,
            bridge_id: bridge_id.toString(),
            output_index: output_index.toString(),
        };
    }
    static fromProto(data) {
        return new MsgDeleteOutput(data.challenger, data.bridgeId.toNumber(), data.outputIndex.toNumber());
    }
    toProto() {
        const { challenger, bridge_id, output_index } = this;
        return tx_1.MsgDeleteOutput.fromPartial({
            challenger,
            bridgeId: long_1.default.fromNumber(bridge_id),
            outputIndex: long_1.default.fromNumber(output_index),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.ophost.v1.MsgDeleteOutput',
            value: tx_1.MsgDeleteOutput.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgDeleteOutput.fromProto(tx_1.MsgDeleteOutput.decode(msgAny.value));
    }
}
exports.MsgDeleteOutput = MsgDeleteOutput;
//# sourceMappingURL=MsgDeleteOutput.js.map