"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgCreateBridge = void 0;
const json_1 = require("../../../util/json");
const BridgeConfig_1 = require("../BridgeConfig");
const tx_1 = require("@initia/opinit.proto/opinit/ophost/v1/tx");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
class MsgCreateBridge extends json_1.JSONSerializable {
    /**
     * @param creator
     * @param config
     */
    constructor(creator, config) {
        super();
        this.creator = creator;
        this.config = config;
    }
    static fromAmino(data) {
        const { value: { creator, config }, } = data;
        return new MsgCreateBridge(creator, BridgeConfig_1.BridgeConfig.fromAmino(config));
    }
    toAmino() {
        const { creator, config } = this;
        return {
            type: 'ophost/MsgCreateBridge',
            value: {
                creator,
                config: config.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { creator, config } = data;
        return new MsgCreateBridge(creator, BridgeConfig_1.BridgeConfig.fromData(config));
    }
    toData() {
        const { creator, config } = this;
        return {
            '@type': '/opinit.ophost.v1.MsgCreateBridge',
            creator,
            config: config.toData(),
        };
    }
    static fromProto(data) {
        return new MsgCreateBridge(data.creator, BridgeConfig_1.BridgeConfig.fromProto(data.config));
    }
    toProto() {
        const { creator, config } = this;
        return tx_1.MsgCreateBridge.fromPartial({
            creator,
            config: config.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.ophost.v1.MsgCreateBridge',
            value: tx_1.MsgCreateBridge.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgCreateBridge.fromProto(tx_1.MsgCreateBridge.decode(msgAny.value));
    }
}
exports.MsgCreateBridge = MsgCreateBridge;
//# sourceMappingURL=MsgCreateBridge.js.map