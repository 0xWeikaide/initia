"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateIbcConnectionParams = void 0;
const json_1 = require("../../../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/ibc/core/connection/v1/tx");
const IbcConnectionParams_1 = require("../IbcConnectionParams");
class MsgUpdateIbcConnectionParams extends json_1.JSONSerializable {
    /**
     * @param signer signer address
     * @param params params defines the connection parameters to update
     */
    constructor(signer, params) {
        super();
        this.signer = signer;
        this.params = params;
    }
    static fromAmino(_) {
        _;
        throw new Error('Amino not supported');
    }
    toAmino() {
        throw new Error('Amino not supported');
    }
    static fromData(data) {
        const { signer, params } = data;
        return new MsgUpdateIbcConnectionParams(signer, IbcConnectionParams_1.IbcConnectionParams.fromData(params));
    }
    toData() {
        const { signer, params } = this;
        return {
            '@type': '/ibc.core.connection.v1.MsgUpdateParams',
            signer,
            params: params.toData(),
        };
    }
    static fromProto(data) {
        return new MsgUpdateIbcConnectionParams(data.signer, IbcConnectionParams_1.IbcConnectionParams.fromProto(data.params));
    }
    toProto() {
        const { signer, params } = this;
        return tx_1.MsgUpdateParams.fromPartial({
            signer,
            params: params.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/ibc.core.connection.v1.MsgUpdateParams',
            value: tx_1.MsgUpdateParams.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateIbcConnectionParams.fromProto(tx_1.MsgUpdateParams.decode(msgAny.value));
    }
}
exports.MsgUpdateIbcConnectionParams = MsgUpdateIbcConnectionParams;
//# sourceMappingURL=MsgUpdateIbcConnectionParams.js.map