"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketId = void 0;
const channel_1 = require("@initia/initia.proto/ibc/core/channel/v1/channel");
const json_1 = require("../../../../util/json");
const long_1 = __importDefault(require("long"));
/**
 * PacketId is an identifer for a unique Packet
 * Source chains refer to packets by source port/channel
 * Destination chains refer to packets by destination port/channel
 */
class PacketId extends json_1.JSONSerializable {
    /**
     * @param port_id  channel port identifier
     * @param channel_id channel unique identifier
     * @param sequence packet sequence
     */
    constructor(port_id, channel_id, sequence) {
        super();
        this.port_id = port_id;
        this.channel_id = channel_id;
        this.sequence = sequence;
    }
    static fromAmino(data) {
        const { port_id, channel_id, sequence } = data;
        return new PacketId(port_id, channel_id, Number.parseInt(sequence));
    }
    toAmino() {
        const { port_id, channel_id, sequence } = this;
        const res = {
            port_id,
            channel_id,
            sequence: sequence.toFixed(),
        };
        return res;
    }
    static fromData(data) {
        const { port_id, channel_id, sequence } = data;
        return new PacketId(port_id, channel_id, Number.parseInt(sequence));
    }
    toData() {
        const { port_id, channel_id, sequence } = this;
        const res = {
            port_id,
            channel_id,
            sequence: sequence.toFixed(),
        };
        return res;
    }
    static fromProto(proto) {
        return new PacketId(proto.portId, proto.channelId, proto.sequence.toNumber());
    }
    toProto() {
        const { port_id, channel_id, sequence } = this;
        return channel_1.PacketId.fromPartial({
            portId: port_id,
            channelId: channel_id,
            sequence: long_1.default.fromNumber(sequence),
        });
    }
}
exports.PacketId = PacketId;
//# sourceMappingURL=PacketId.js.map