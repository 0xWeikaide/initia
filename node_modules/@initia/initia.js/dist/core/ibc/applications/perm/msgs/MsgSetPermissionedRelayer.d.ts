import { JSONSerializable } from '../../../../../util/json';
import { AccAddress } from '../../../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgSetPermissionedRelayer as MsgSetPermissionedRelayer_pb } from '@initia/initia.proto/ibc/applications/perm/v1/tx';
export declare class MsgSetPermissionedRelayer extends JSONSerializable<MsgSetPermissionedRelayer.Amino, MsgSetPermissionedRelayer.Data, MsgSetPermissionedRelayer.Proto> {
    authority: AccAddress;
    port_id: string;
    channel_id: string;
    relayer: string;
    /**
     * @param authority the address that controls the module
     * @param port_id
     * @param channel_id
     * @param relayer
     */
    constructor(authority: AccAddress, port_id: string, channel_id: string, relayer: string);
    static fromAmino(data: MsgSetPermissionedRelayer.Amino): MsgSetPermissionedRelayer;
    toAmino(): MsgSetPermissionedRelayer.Amino;
    static fromData(data: MsgSetPermissionedRelayer.Data): MsgSetPermissionedRelayer;
    toData(): MsgSetPermissionedRelayer.Data;
    static fromProto(data: MsgSetPermissionedRelayer.Proto): MsgSetPermissionedRelayer;
    toProto(): MsgSetPermissionedRelayer.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgSetPermissionedRelayer;
}
export declare namespace MsgSetPermissionedRelayer {
    interface Amino {
        type: 'perm/MsgSetPermissionedRelayer';
        value: {
            authority: AccAddress;
            port_id: string;
            channel_id: string;
            relayer: string;
        };
    }
    interface Data {
        '@type': '/ibc.applications.perm.v1.MsgSetPermissionedRelayer';
        authority: AccAddress;
        port_id: string;
        channel_id: string;
        relayer: string;
    }
    type Proto = MsgSetPermissionedRelayer_pb;
}
