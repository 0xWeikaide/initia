"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSetPermissionedRelayer = void 0;
const json_1 = require("../../../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/ibc/applications/perm/v1/tx");
class MsgSetPermissionedRelayer extends json_1.JSONSerializable {
    /**
     * @param authority the address that controls the module
     * @param port_id
     * @param channel_id
     * @param relayer
     */
    constructor(authority, port_id, channel_id, relayer) {
        super();
        this.authority = authority;
        this.port_id = port_id;
        this.channel_id = channel_id;
        this.relayer = relayer;
    }
    static fromAmino(data) {
        const { value: { authority, port_id, channel_id, relayer }, } = data;
        return new MsgSetPermissionedRelayer(authority, port_id, channel_id, relayer);
    }
    toAmino() {
        const { authority, port_id, channel_id, relayer } = this;
        return {
            type: 'perm/MsgSetPermissionedRelayer',
            value: {
                authority,
                port_id,
                channel_id,
                relayer,
            },
        };
    }
    static fromData(data) {
        const { authority, port_id, channel_id, relayer } = data;
        return new MsgSetPermissionedRelayer(authority, port_id, channel_id, relayer);
    }
    toData() {
        const { authority, port_id, channel_id, relayer } = this;
        return {
            '@type': '/ibc.applications.perm.v1.MsgSetPermissionedRelayer',
            authority,
            port_id,
            channel_id,
            relayer,
        };
    }
    static fromProto(data) {
        return new MsgSetPermissionedRelayer(data.authority, data.portId, data.channelId, data.relayer);
    }
    toProto() {
        const { authority, port_id, channel_id, relayer } = this;
        return tx_1.MsgSetPermissionedRelayer.fromPartial({
            authority,
            portId: port_id,
            channelId: channel_id,
            relayer,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/ibc.applications.perm.v1.MsgSetPermissionedRelayer',
            value: tx_1.MsgSetPermissionedRelayer.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgSetPermissionedRelayer.fromProto(tx_1.MsgSetPermissionedRelayer.decode(msgAny.value));
    }
}
exports.MsgSetPermissionedRelayer = MsgSetPermissionedRelayer;
//# sourceMappingURL=MsgSetPermissionedRelayer.js.map