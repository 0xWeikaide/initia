"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IbcFetchpriceParams = void 0;
const json_1 = require("../../../../util/json");
const Duration_1 = require("../../../Duration");
const types_1 = require("@initia/initia.proto/ibc/applications/fetchprice/v1/types");
class IbcFetchpriceParams extends json_1.JSONSerializable {
    /**
     * @param fetch_enabled enables or disables cross-chain oracle price icq query from this chain
     * @param fetch_activated enables or disables all cross-chain token transfers to this chain
     * @param timeout_duration duration of the fetchprice timeout
     */
    constructor(fetch_enabled, fetch_activated, timeout_duration) {
        super();
        this.fetch_enabled = fetch_enabled;
        this.fetch_activated = fetch_activated;
        this.timeout_duration = timeout_duration;
    }
    static fromAmino(data) {
        const { fetch_enabled, fetch_activated, timeout_duration } = data;
        return new IbcFetchpriceParams(fetch_enabled, fetch_activated, Duration_1.Duration.fromAmino(timeout_duration));
    }
    toAmino() {
        const { fetch_enabled, fetch_activated, timeout_duration } = this;
        return {
            fetch_enabled,
            fetch_activated,
            timeout_duration: timeout_duration.toAmino(),
        };
    }
    static fromData(data) {
        const { fetch_enabled, fetch_activated, timeout_duration } = data;
        return new IbcFetchpriceParams(fetch_enabled, fetch_activated, Duration_1.Duration.fromData(timeout_duration));
    }
    toData() {
        const { fetch_enabled, fetch_activated, timeout_duration } = this;
        return {
            fetch_enabled,
            fetch_activated,
            timeout_duration: timeout_duration.toData(),
        };
    }
    static fromProto(data) {
        return new IbcFetchpriceParams(data.fetchEnabled, data.fetchActivated, Duration_1.Duration.fromProto(data.timeoutDuration));
    }
    toProto() {
        const { fetch_enabled, fetch_activated, timeout_duration } = this;
        return types_1.Params.fromPartial({
            fetchEnabled: fetch_enabled,
            fetchActivated: fetch_activated,
            timeoutDuration: timeout_duration.toProto(),
        });
    }
}
exports.IbcFetchpriceParams = IbcFetchpriceParams;
//# sourceMappingURL=IbcFetchpriceParams.js.map