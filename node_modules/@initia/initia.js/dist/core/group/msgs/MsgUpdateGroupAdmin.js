"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateGroupAdmin = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/group/v1/tx");
const long_1 = __importDefault(require("long"));
class MsgUpdateGroupAdmin extends json_1.JSONSerializable {
    /**
     * @param admin the current account address of the group admin
     * @param group_id the unique ID of the group
     * @param new_admin the group new admin account address
     */
    constructor(admin, group_id, new_admin) {
        super();
        this.admin = admin;
        this.group_id = group_id;
        this.new_admin = new_admin;
    }
    static fromAmino(data) {
        const { value: { admin, group_id, new_admin }, } = data;
        return new MsgUpdateGroupAdmin(admin, Number.parseInt(group_id), new_admin);
    }
    toAmino() {
        const { admin, group_id, new_admin } = this;
        return {
            type: 'cosmos-sdk/MsgUpdateGroupAdmin',
            value: {
                admin,
                group_id: group_id.toString(),
                new_admin,
            },
        };
    }
    static fromData(data) {
        const { admin, group_id, new_admin } = data;
        return new MsgUpdateGroupAdmin(admin, Number.parseInt(group_id), new_admin);
    }
    toData() {
        const { admin, group_id, new_admin } = this;
        return {
            '@type': '/cosmos.group.v1.MsgUpdateGroupAdmin',
            admin,
            group_id: group_id.toString(),
            new_admin,
        };
    }
    static fromProto(data) {
        return new MsgUpdateGroupAdmin(data.admin, data.groupId.toNumber(), data.newAdmin);
    }
    toProto() {
        const { admin, group_id, new_admin } = this;
        return tx_1.MsgUpdateGroupAdmin.fromPartial({
            admin,
            groupId: long_1.default.fromNumber(group_id),
            newAdmin: new_admin,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.group.v1.MsgUpdateGroupAdmin',
            value: tx_1.MsgUpdateGroupAdmin.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateGroupAdmin.fromProto(tx_1.MsgUpdateGroupAdmin.decode(msgAny.value));
    }
}
exports.MsgUpdateGroupAdmin = MsgUpdateGroupAdmin;
//# sourceMappingURL=MsgUpdateGroupAdmin.js.map