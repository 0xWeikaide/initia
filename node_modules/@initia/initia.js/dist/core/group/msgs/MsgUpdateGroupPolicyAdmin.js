"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateGroupPolicyAdmin = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/group/v1/tx");
class MsgUpdateGroupPolicyAdmin extends json_1.JSONSerializable {
    /**
     * @param admin the current account address of the group admin
     * @param group_policy_address the account address of group policy
     * @param new_admin the group new admin account address
     */
    constructor(admin, group_policy_address, new_admin) {
        super();
        this.admin = admin;
        this.group_policy_address = group_policy_address;
        this.new_admin = new_admin;
    }
    static fromAmino(data) {
        const { value: { admin, group_policy_address, new_admin }, } = data;
        return new MsgUpdateGroupPolicyAdmin(admin, group_policy_address, new_admin);
    }
    toAmino() {
        const { admin, group_policy_address, new_admin } = this;
        return {
            type: 'cosmos-sdk/MsgUpdateGroupPolicyAdmin',
            value: {
                admin,
                group_policy_address,
                new_admin,
            },
        };
    }
    static fromData(data) {
        const { admin, group_policy_address, new_admin } = data;
        return new MsgUpdateGroupPolicyAdmin(admin, group_policy_address, new_admin);
    }
    toData() {
        const { admin, group_policy_address, new_admin } = this;
        return {
            '@type': '/cosmos.group.v1.MsgUpdateGroupPolicyAdmin',
            admin,
            group_policy_address,
            new_admin,
        };
    }
    static fromProto(data) {
        return new MsgUpdateGroupPolicyAdmin(data.admin, data.groupPolicyAddress, data.newAdmin);
    }
    toProto() {
        const { admin, group_policy_address, new_admin } = this;
        return tx_1.MsgUpdateGroupPolicyAdmin.fromPartial({
            admin,
            groupPolicyAddress: group_policy_address,
            newAdmin: new_admin,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.group.v1.MsgUpdateGroupPolicyAdmin',
            value: tx_1.MsgUpdateGroupPolicyAdmin.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateGroupPolicyAdmin.fromProto(tx_1.MsgUpdateGroupPolicyAdmin.decode(msgAny.value));
    }
}
exports.MsgUpdateGroupPolicyAdmin = MsgUpdateGroupPolicyAdmin;
//# sourceMappingURL=MsgUpdateGroupPolicyAdmin.js.map