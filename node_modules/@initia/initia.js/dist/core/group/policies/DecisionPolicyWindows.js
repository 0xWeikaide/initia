"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecisionPolicyWindows = void 0;
const json_1 = require("../../../util/json");
const Duration_1 = require("../../Duration");
const types_1 = require("@initia/initia.proto/cosmos/group/v1/types");
class DecisionPolicyWindows extends json_1.JSONSerializable {
    /**
     * @param voting_period the duration from submission of a proposal to the end of voting period
     * @param min_execution_period the minimum duration after the proposal submission where members can start sending MsgExec
     */
    constructor(voting_period, min_execution_period) {
        super();
        this.voting_period = voting_period;
        this.min_execution_period = min_execution_period;
    }
    static fromAmino(data) {
        const { voting_period, min_execution_period } = data;
        return new DecisionPolicyWindows(Duration_1.Duration.fromAmino(voting_period), Duration_1.Duration.fromAmino(min_execution_period));
    }
    toAmino() {
        const { voting_period, min_execution_period } = this;
        return {
            voting_period: voting_period.toAmino(),
            min_execution_period: min_execution_period.toAmino(),
        };
    }
    static fromData(data) {
        const { voting_period, min_execution_period } = data;
        return new DecisionPolicyWindows(Duration_1.Duration.fromData(voting_period), Duration_1.Duration.fromData(min_execution_period));
    }
    toData() {
        const { voting_period, min_execution_period } = this;
        return {
            voting_period: voting_period.toData(),
            min_execution_period: min_execution_period.toData(),
        };
    }
    static fromProto(data) {
        return new DecisionPolicyWindows(Duration_1.Duration.fromProto(data.votingPeriod), Duration_1.Duration.fromProto(data.minExecutionPeriod));
    }
    toProto() {
        const { voting_period, min_execution_period } = this;
        return types_1.DecisionPolicyWindows.fromPartial({
            votingPeriod: voting_period.toProto(),
            minExecutionPeriod: min_execution_period.toProto(),
        });
    }
}
exports.DecisionPolicyWindows = DecisionPolicyWindows;
//# sourceMappingURL=DecisionPolicyWindows.js.map