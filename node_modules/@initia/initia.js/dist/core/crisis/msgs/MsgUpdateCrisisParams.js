"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateCrisisParams = void 0;
const json_1 = require("../../../util/json");
const Coin_1 = require("../../Coin");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/crisis/v1beta1/tx");
class MsgUpdateCrisisParams extends json_1.JSONSerializable {
    /**
     * @param authority the address that controls the module
     * @param constant_fee constant_fee defines the x/crisis parameters to update
     */
    constructor(authority, constant_fee) {
        super();
        this.authority = authority;
        this.constant_fee = constant_fee;
    }
    static fromAmino(data) {
        const { value: { authority, constant_fee }, } = data;
        return new MsgUpdateCrisisParams(authority, Coin_1.Coin.fromAmino(constant_fee));
    }
    toAmino() {
        const { authority, constant_fee } = this;
        return {
            type: 'cosmos-sdk/x/crisis/MsgUpdateParams',
            value: {
                authority,
                constant_fee: constant_fee.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { authority, constant_fee } = data;
        return new MsgUpdateCrisisParams(authority, Coin_1.Coin.fromData(constant_fee));
    }
    toData() {
        const { authority, constant_fee } = this;
        return {
            '@type': '/cosmos.crisis.v1beta1.MsgUpdateParams',
            authority,
            constant_fee: constant_fee.toData(),
        };
    }
    static fromProto(data) {
        return new MsgUpdateCrisisParams(data.authority, Coin_1.Coin.fromProto(data.constantFee));
    }
    toProto() {
        const { authority, constant_fee } = this;
        return tx_1.MsgUpdateParams.fromPartial({
            authority,
            constantFee: constant_fee.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.crisis.v1beta1.MsgUpdateParams',
            value: tx_1.MsgUpdateParams.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateCrisisParams.fromProto(tx_1.MsgUpdateParams.decode(msgAny.value));
    }
}
exports.MsgUpdateCrisisParams = MsgUpdateCrisisParams;
//# sourceMappingURL=MsgUpdateCrisisParams.js.map