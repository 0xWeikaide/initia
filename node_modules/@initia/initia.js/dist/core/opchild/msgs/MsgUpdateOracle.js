"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateOracle = void 0;
const json_1 = require("../../../util/json");
const tx_1 = require("@initia/opinit.proto/opinit/opchild/v1/tx");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const long_1 = __importDefault(require("long"));
class MsgUpdateOracle extends json_1.JSONSerializable {
    /**
     * @param sender the sender address
     * @param height the height of l1 which is including the oracle message
     * @param data oracle votes bytes
     */
    constructor(sender, height, data) {
        super();
        this.sender = sender;
        this.height = height;
        this.data = data;
    }
    static fromAmino(data) {
        return new MsgUpdateOracle(data.value.sender, Number.parseInt(data.value.height), data.value.data);
    }
    toAmino() {
        const { sender, height, data } = this;
        return {
            type: 'opchild/MsgUpdateOracle',
            value: {
                sender,
                height: height.toString(),
                data,
            },
        };
    }
    static fromData(data) {
        return new MsgUpdateOracle(data.sender, Number.parseInt(data.height), data.data);
    }
    toData() {
        const { sender, height, data } = this;
        return {
            '@type': '/opinit.opchild.v1.MsgUpdateOracle',
            sender,
            height: height.toString(),
            data,
        };
    }
    static fromProto(data) {
        return new MsgUpdateOracle(data.sender, data.height.toNumber(), Buffer.from(data.data).toString('base64'));
    }
    toProto() {
        const { sender, height, data } = this;
        return tx_1.MsgUpdateOracle.fromPartial({
            sender,
            height: long_1.default.fromNumber(height),
            data: Buffer.from(data, 'base64'),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.opchild.v1.MsgUpdateOracle',
            value: tx_1.MsgUpdateOracle.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateOracle.fromProto(tx_1.MsgUpdateOracle.decode(msgAny.value));
    }
}
exports.MsgUpdateOracle = MsgUpdateOracle;
//# sourceMappingURL=MsgUpdateOracle.js.map