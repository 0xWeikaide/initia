"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSpendFeePool = void 0;
const json_1 = require("../../../util/json");
const Coins_1 = require("../../Coins");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/opinit.proto/opinit/opchild/v1/tx");
class MsgSpendFeePool extends json_1.JSONSerializable {
    /**
     * @param authority the address that controls the module
     * @param recipient address to receive the coins
     * @param amount the coin amount to spend
     */
    constructor(authority, recipient, amount) {
        super();
        this.authority = authority;
        this.recipient = recipient;
        this.amount = new Coins_1.Coins(amount);
    }
    static fromAmino(data) {
        const { value: { authority, recipient, amount }, } = data;
        return new MsgSpendFeePool(authority, recipient, Coins_1.Coins.fromAmino(amount));
    }
    toAmino() {
        const { authority, recipient, amount } = this;
        return {
            type: 'opchild/MsgSpendFeePool',
            value: {
                authority,
                recipient,
                amount: amount.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { authority, recipient, amount } = data;
        return new MsgSpendFeePool(authority, recipient, Coins_1.Coins.fromData(amount));
    }
    toData() {
        const { authority, recipient, amount } = this;
        return {
            '@type': '/opinit.opchild.v1.MsgSpendFeePool',
            authority,
            recipient,
            amount: amount.toData(),
        };
    }
    static fromProto(data) {
        return new MsgSpendFeePool(data.authority, data.recipient, Coins_1.Coins.fromProto(data.amount));
    }
    toProto() {
        const { authority, recipient, amount } = this;
        return tx_1.MsgSpendFeePool.fromPartial({
            authority,
            recipient,
            amount: amount.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.opchild.v1.MsgSpendFeePool',
            value: tx_1.MsgSpendFeePool.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgSpendFeePool.fromProto(tx_1.MsgSpendFeePool.decode(msgAny.value));
    }
}
exports.MsgSpendFeePool = MsgSpendFeePool;
//# sourceMappingURL=MsgSpendFeePool.js.map