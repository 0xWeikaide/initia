"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgFinalizeTokenDeposit = void 0;
const json_1 = require("../../../util/json");
const Coin_1 = require("../../Coin");
const tx_1 = require("@initia/opinit.proto/opinit/opchild/v1/tx");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const long_1 = __importDefault(require("long"));
class MsgFinalizeTokenDeposit extends json_1.JSONSerializable {
    /**
     * @param sender the sender address
     * @param from l1 sender address
     * @param to l2 recepient address
     * @param amount the coin amount to deposit
     * @param sequence the sequence number of l1 bridge
     * @param height the height of l1 which is including the deposit message
     * @param data extra bytes for hooks
     */
    constructor(sender, from, to, amount, sequence, height, base_denom, data) {
        super();
        this.sender = sender;
        this.from = from;
        this.to = to;
        this.amount = amount;
        this.sequence = sequence;
        this.height = height;
        this.base_denom = base_denom;
        this.data = data;
    }
    static fromAmino(msgAmino) {
        const { value: { sender, from, to, amount, sequence, height, base_denom, data }, } = msgAmino;
        return new MsgFinalizeTokenDeposit(sender, from, to, Coin_1.Coin.fromAmino(amount), Number.parseInt(sequence), Number.parseInt(height), base_denom, data);
    }
    toAmino() {
        const { sender, from, to, amount, sequence, height, base_denom, data } = this;
        return {
            type: 'opchild/MsgFinalizeTokenDeposit',
            value: {
                sender,
                from,
                to,
                amount: amount.toAmino(),
                sequence: sequence.toString(),
                height: height.toString(),
                base_denom,
                data,
            },
        };
    }
    static fromData(msgData) {
        const { sender, from, to, amount, sequence, height, base_denom, data } = msgData;
        return new MsgFinalizeTokenDeposit(sender, from, to, Coin_1.Coin.fromData(amount), Number.parseInt(sequence), Number.parseInt(height), base_denom, data);
    }
    toData() {
        const { sender, from, to, amount, sequence, height, base_denom, data } = this;
        return {
            '@type': '/opinit.opchild.v1.MsgFinalizeTokenDeposit',
            sender,
            from,
            to,
            amount: amount.toData(),
            sequence: sequence.toString(),
            height: height.toString(),
            base_denom,
            data,
        };
    }
    static fromProto(msgProto) {
        return new MsgFinalizeTokenDeposit(msgProto.sender, msgProto.from, msgProto.to, Coin_1.Coin.fromProto(msgProto.amount), msgProto.sequence.toNumber(), msgProto.height.toNumber(), msgProto.baseDenom, msgProto.data.length
            ? Buffer.from(msgProto.data).toString('base64')
            : undefined);
    }
    toProto() {
        const { sender, from, to, amount, sequence, height, base_denom, data } = this;
        return tx_1.MsgFinalizeTokenDeposit.fromPartial({
            sender,
            from,
            to,
            amount: amount.toProto(),
            sequence: long_1.default.fromNumber(sequence),
            height: long_1.default.fromNumber(height),
            baseDenom: base_denom,
            data: data ? Buffer.from(data, 'base64') : undefined,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.opchild.v1.MsgFinalizeTokenDeposit',
            value: tx_1.MsgFinalizeTokenDeposit.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgFinalizeTokenDeposit.fromProto(tx_1.MsgFinalizeTokenDeposit.decode(msgAny.value));
    }
}
exports.MsgFinalizeTokenDeposit = MsgFinalizeTokenDeposit;
//# sourceMappingURL=MsgFinalizeTokenDeposit.js.map