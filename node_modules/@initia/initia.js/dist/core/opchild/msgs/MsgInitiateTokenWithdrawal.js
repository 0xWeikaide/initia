"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgInitiateTokenWithdrawal = void 0;
const json_1 = require("../../../util/json");
const Coin_1 = require("../../Coin");
const tx_1 = require("@initia/opinit.proto/opinit/opchild/v1/tx");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
class MsgInitiateTokenWithdrawal extends json_1.JSONSerializable {
    /**
     * @param sender the l2 sender address
     * @param to l1 recipient address
     * @param amount the coin amount to withdraw
     */
    constructor(sender, to, amount) {
        super();
        this.sender = sender;
        this.to = to;
        this.amount = amount;
    }
    static fromAmino(data) {
        const { value: { sender, to, amount }, } = data;
        return new MsgInitiateTokenWithdrawal(sender, to, Coin_1.Coin.fromAmino(amount));
    }
    toAmino() {
        const { sender, to, amount } = this;
        return {
            type: 'opchild/MsgInitiateTokenWithdrawal',
            value: {
                sender,
                to,
                amount: amount.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { sender, to, amount } = data;
        return new MsgInitiateTokenWithdrawal(sender, to, Coin_1.Coin.fromData(amount));
    }
    toData() {
        const { sender, to, amount } = this;
        return {
            '@type': '/opinit.opchild.v1.MsgInitiateTokenWithdrawal',
            sender,
            to,
            amount: amount.toData(),
        };
    }
    static fromProto(data) {
        return new MsgInitiateTokenWithdrawal(data.sender, data.to, Coin_1.Coin.fromProto(data.amount));
    }
    toProto() {
        const { sender, to, amount } = this;
        return tx_1.MsgInitiateTokenWithdrawal.fromPartial({
            sender,
            to,
            amount: amount.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/opinit.opchild.v1.MsgInitiateTokenWithdrawal',
            value: tx_1.MsgInitiateTokenWithdrawal.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgInitiateTokenWithdrawal.fromProto(tx_1.MsgInitiateTokenWithdrawal.decode(msgAny.value));
    }
}
exports.MsgInitiateTokenWithdrawal = MsgInitiateTokenWithdrawal;
//# sourceMappingURL=MsgInitiateTokenWithdrawal.js.map