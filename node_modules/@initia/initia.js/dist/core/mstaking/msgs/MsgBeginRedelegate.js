"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgBeginRedelegate = void 0;
const json_1 = require("../../../util/json");
const Coins_1 = require("../../Coins");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/initia/mstaking/v1/tx");
/**
 * A delegator can choose to redelegate their bonded Initia and transfer a delegation
 * amount from one validator to another. Unlike undelegating, redelegations do not incur
 * a 21-day unbonding period and happen immediately.
 */
class MsgBeginRedelegate extends json_1.JSONSerializable {
    /**
     *
     * @param delegator_address delegator's account address
     * @param validator_src_address validator to undelegate from
     * @param validator_dst_address validator to delegate to
     * @param amount INIT to be redelegated
     */
    constructor(delegator_address, validator_src_address, validator_dst_address, amount) {
        super();
        this.delegator_address = delegator_address;
        this.validator_src_address = validator_src_address;
        this.validator_dst_address = validator_dst_address;
        this.amount = new Coins_1.Coins(amount);
    }
    static fromAmino(data) {
        const { value: { delegator_address, validator_src_address, validator_dst_address, amount, }, } = data;
        return new MsgBeginRedelegate(delegator_address, validator_src_address, validator_dst_address, Coins_1.Coins.fromAmino(amount));
    }
    toAmino() {
        const { delegator_address, validator_src_address, validator_dst_address, amount, } = this;
        return {
            type: 'mstaking/MsgBeginRedelegate',
            value: {
                delegator_address,
                validator_src_address,
                validator_dst_address,
                amount: amount.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { delegator_address, validator_src_address, validator_dst_address, amount, } = data;
        return new MsgBeginRedelegate(delegator_address, validator_src_address, validator_dst_address, Coins_1.Coins.fromData(amount));
    }
    toData() {
        const { delegator_address, validator_src_address, validator_dst_address, amount, } = this;
        return {
            '@type': '/initia.mstaking.v1.MsgBeginRedelegate',
            delegator_address,
            validator_src_address,
            validator_dst_address,
            amount: amount.toData(),
        };
    }
    static fromProto(proto) {
        return new MsgBeginRedelegate(proto.delegatorAddress, proto.validatorSrcAddress, proto.validatorDstAddress, Coins_1.Coins.fromProto(proto.amount));
    }
    toProto() {
        const { delegator_address, validator_src_address, validator_dst_address, amount, } = this;
        return tx_1.MsgBeginRedelegate.fromPartial({
            amount: amount.toProto(),
            delegatorAddress: delegator_address,
            validatorDstAddress: validator_dst_address,
            validatorSrcAddress: validator_src_address,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/initia.mstaking.v1.MsgBeginRedelegate',
            value: tx_1.MsgBeginRedelegate.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgBeginRedelegate.fromProto(tx_1.MsgBeginRedelegate.decode(msgAny.value));
    }
}
exports.MsgBeginRedelegate = MsgBeginRedelegate;
//# sourceMappingURL=MsgBeginRedelegate.js.map