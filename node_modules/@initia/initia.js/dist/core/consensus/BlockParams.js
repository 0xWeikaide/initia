"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockParams = void 0;
const json_1 = require("../../util/json");
const params_1 = require("@initia/initia.proto/tendermint/types/params");
const long_1 = __importDefault(require("long"));
class BlockParams extends json_1.JSONSerializable {
    /**
     * @param max_bytes Max block size in bytes, must be greater than 0
     * @param max_gas Max gas per block, must be greater or equal to -1
     */
    constructor(max_bytes, max_gas) {
        super();
        this.max_bytes = max_bytes;
        this.max_gas = max_gas;
    }
    static fromAmino(data) {
        const { max_bytes, max_gas } = data;
        return new BlockParams(Number.parseInt(max_bytes), Number.parseInt(max_gas));
    }
    toAmino() {
        const { max_bytes, max_gas } = this;
        return {
            max_bytes: max_bytes.toString(),
            max_gas: max_gas.toString(),
        };
    }
    static fromData(data) {
        const { max_bytes, max_gas } = data;
        return new BlockParams(Number.parseInt(max_bytes), Number.parseInt(max_gas));
    }
    toData() {
        const { max_bytes, max_gas } = this;
        return {
            max_bytes: max_bytes.toString(),
            max_gas: max_gas.toString(),
        };
    }
    static fromProto(data) {
        return new BlockParams(data.maxBytes.toNumber(), data.maxGas.toNumber());
    }
    toProto() {
        const { max_bytes, max_gas } = this;
        return params_1.BlockParams.fromPartial({
            maxBytes: long_1.default.fromNumber(max_bytes),
            maxGas: long_1.default.fromNumber(max_gas),
        });
    }
}
exports.BlockParams = BlockParams;
//# sourceMappingURL=BlockParams.js.map