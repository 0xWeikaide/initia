import { JSONSerializable } from '../../util/json';
import { Duration } from '../Duration';
import { EvidenceParams as EvidenceParams_pb } from '@initia/initia.proto/tendermint/types/params';
export declare class EvidenceParams extends JSONSerializable<EvidenceParams.Amino, EvidenceParams.Data, EvidenceParams.Proto> {
    max_age_num_blocks: number;
    max_age_duration: Duration;
    max_bytes: number;
    /**
     * @param max_age_num_blocks Max age of evidence in blocks, MaxAgeDuration / average block time
     * @param max_age_duration Max age of evidence in time
     * @param max_bytes the maximum size of total evidence in bytes that can be committed in a single block
     */
    constructor(max_age_num_blocks: number, max_age_duration: Duration, max_bytes: number);
    static fromAmino(data: EvidenceParams.Amino): EvidenceParams;
    toAmino(): EvidenceParams.Amino;
    static fromData(data: EvidenceParams.Data): EvidenceParams;
    toData(): EvidenceParams.Data;
    static fromProto(data: EvidenceParams.Proto): EvidenceParams;
    toProto(): EvidenceParams.Proto;
}
export declare namespace EvidenceParams {
    interface Amino {
        max_age_num_blocks: string;
        max_age_duration: Duration.Amino;
        max_bytes: string;
    }
    interface Data {
        max_age_num_blocks: string;
        max_age_duration: Duration.Data;
        max_bytes: string;
    }
    type Proto = EvidenceParams_pb;
}
