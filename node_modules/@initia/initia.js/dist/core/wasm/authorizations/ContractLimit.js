"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractLimit = void 0;
const MaxCallsLimit_1 = require("./MaxCallsLimit");
const MaxFundsLimit_1 = require("./MaxFundsLimit");
const CombinedLimit_1 = require("./CombinedLimit");
var ContractLimit;
(function (ContractLimit) {
    function fromAmino(data) {
        switch (data.type) {
            case 'wasm/MaxCallsLimit':
                return MaxCallsLimit_1.MaxCallsLimit.fromAmino(data);
            case 'wasm/MaxFundsLimit':
                return MaxFundsLimit_1.MaxFundsLimit.fromAmino(data);
            case 'wasm/CombinedLimit':
                return CombinedLimit_1.CombinedLimit.fromAmino(data);
        }
    }
    ContractLimit.fromAmino = fromAmino;
    function fromData(data) {
        switch (data['@type']) {
            case '/cosmwasm.wasm.v1.MaxCallsLimit':
                return MaxCallsLimit_1.MaxCallsLimit.fromData(data);
            case '/cosmwasm.wasm.v1.MaxFundsLimit':
                return MaxFundsLimit_1.MaxFundsLimit.fromData(data);
            case '/cosmwasm.wasm.v1.CombinedLimit':
                return CombinedLimit_1.CombinedLimit.fromData(data);
        }
    }
    ContractLimit.fromData = fromData;
    function fromProto(proto) {
        const typeUrl = proto.typeUrl;
        switch (typeUrl) {
            case '/cosmwasm.wasm.v1.MaxCallsLimit':
                return MaxCallsLimit_1.MaxCallsLimit.unpackAny(proto);
            case '/cosmwasm.wasm.v1.MaxFundsLimit':
                return MaxFundsLimit_1.MaxFundsLimit.unpackAny(proto);
            case '/cosmwasm.wasm.v1.CombinedLimit':
                return CombinedLimit_1.CombinedLimit.unpackAny(proto);
        }
        throw new Error(`ContractLimit type ${typeUrl} not recognized`);
    }
    ContractLimit.fromProto = fromProto;
})(ContractLimit || (exports.ContractLimit = ContractLimit = {}));
//# sourceMappingURL=ContractLimit.js.map