"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaxFundsLimit = void 0;
const json_1 = require("../../../util/json");
const Coins_1 = require("../../Coins");
const authz_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/authz");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
class MaxFundsLimit extends json_1.JSONSerializable {
    constructor(amounts) {
        super();
        this.amounts = new Coins_1.Coins(amounts);
    }
    static fromAmino(data) {
        return new MaxFundsLimit(Coins_1.Coins.fromAmino(data.value.amounts));
    }
    toAmino() {
        return {
            type: 'wasm/MaxFundsLimit',
            value: { amounts: this.amounts.toAmino() },
        };
    }
    static fromData(data) {
        return new MaxFundsLimit(Coins_1.Coins.fromData(data.amounts));
    }
    toData() {
        return {
            '@type': '/cosmwasm.wasm.v1.MaxFundsLimit',
            amounts: this.amounts.toData(),
        };
    }
    static fromProto(data) {
        return new MaxFundsLimit(Coins_1.Coins.fromProto(data.amounts));
    }
    toProto() {
        return authz_1.MaxFundsLimit.fromPartial({ amounts: this.amounts.toProto() });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.MaxFundsLimit',
            value: authz_1.MaxFundsLimit.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MaxFundsLimit.fromProto(authz_1.MaxFundsLimit.decode(msgAny.value));
    }
}
exports.MaxFundsLimit = MaxFundsLimit;
//# sourceMappingURL=MaxFundsLimit.js.map