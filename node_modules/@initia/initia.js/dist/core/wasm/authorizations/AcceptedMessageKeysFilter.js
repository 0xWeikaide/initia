"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcceptedMessageKeysFilter = void 0;
const json_1 = require("../../../util/json");
const authz_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/authz");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
class AcceptedMessageKeysFilter extends json_1.JSONSerializable {
    constructor(keys) {
        super();
        this.keys = keys;
    }
    static fromAmino(data) {
        return new AcceptedMessageKeysFilter(data.value.keys);
    }
    toAmino() {
        return {
            type: 'wasm/AcceptedMessageKeysFilter',
            value: { keys: this.keys },
        };
    }
    static fromData(data) {
        return new AcceptedMessageKeysFilter(data.keys);
    }
    toData() {
        return {
            '@type': '/cosmwasm.wasm.v1.AcceptedMessageKeysFilter',
            keys: this.keys,
        };
    }
    static fromProto(data) {
        return new AcceptedMessageKeysFilter(data.keys);
    }
    toProto() {
        return authz_1.AcceptedMessageKeysFilter.fromPartial({ keys: this.keys });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.AcceptedMessageKeysFilter',
            value: authz_1.AcceptedMessageKeysFilter.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return AcceptedMessageKeysFilter.fromProto(authz_1.AcceptedMessageKeysFilter.decode(msgAny.value));
    }
}
exports.AcceptedMessageKeysFilter = AcceptedMessageKeysFilter;
//# sourceMappingURL=AcceptedMessageKeysFilter.js.map