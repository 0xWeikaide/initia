"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaxCallsLimit = void 0;
const json_1 = require("../../../util/json");
const authz_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/authz");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const long_1 = __importDefault(require("long"));
class MaxCallsLimit extends json_1.JSONSerializable {
    constructor(remaining) {
        super();
        this.remaining = remaining;
    }
    static fromAmino(data) {
        return new MaxCallsLimit(Number.parseInt(data.value.remaining));
    }
    toAmino() {
        return {
            type: 'wasm/MaxCallsLimit',
            value: { remaining: this.remaining.toString() },
        };
    }
    static fromData(data) {
        return new MaxCallsLimit(Number.parseInt(data.remaining));
    }
    toData() {
        return {
            '@type': '/cosmwasm.wasm.v1.MaxCallsLimit',
            remaining: this.remaining.toString(),
        };
    }
    static fromProto(data) {
        return new MaxCallsLimit(data.remaining.toNumber());
    }
    toProto() {
        return authz_1.MaxCallsLimit.fromPartial({
            remaining: long_1.default.fromNumber(this.remaining),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.MaxCallsLimit',
            value: authz_1.MaxCallsLimit.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MaxCallsLimit.fromProto(authz_1.MaxCallsLimit.decode(msgAny.value));
    }
}
exports.MaxCallsLimit = MaxCallsLimit;
//# sourceMappingURL=MaxCallsLimit.js.map