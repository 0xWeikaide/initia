"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbsoluteTxPosition = void 0;
const json_1 = require("../../util/json");
const types_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/types");
const long_1 = __importDefault(require("long"));
class AbsoluteTxPosition extends json_1.JSONSerializable {
    /**
     * @param block_height the block the contract was created at
     * @param tx_index a monotonic counter within the block (actual transaction index, or gas consumed)
     */
    constructor(block_height, tx_index) {
        super();
        this.block_height = block_height;
        this.tx_index = tx_index;
    }
    static fromAmino(data) {
        const { block_height, tx_index } = data;
        return new AbsoluteTxPosition(Number.parseInt(block_height), Number.parseInt(tx_index));
    }
    toAmino() {
        const { block_height, tx_index } = this;
        return {
            block_height: block_height.toString(),
            tx_index: tx_index.toString(),
        };
    }
    static fromData(data) {
        const { block_height, tx_index } = data;
        return new AbsoluteTxPosition(Number.parseInt(block_height), Number.parseInt(tx_index));
    }
    toData() {
        const { block_height, tx_index } = this;
        return {
            block_height: block_height.toString(),
            tx_index: tx_index.toString(),
        };
    }
    static fromProto(data) {
        return new AbsoluteTxPosition(data.blockHeight.toNumber(), data.txIndex.toNumber());
    }
    toProto() {
        const { block_height, tx_index } = this;
        return types_1.AbsoluteTxPosition.fromPartial({
            blockHeight: long_1.default.fromNumber(block_height),
            txIndex: long_1.default.fromNumber(tx_index),
        });
    }
}
exports.AbsoluteTxPosition = AbsoluteTxPosition;
//# sourceMappingURL=AbsoluteTxPosition.js.map