"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgUpdateAdmin = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/tx");
class MsgUpdateAdmin extends json_1.JSONSerializable {
    /**
     * @param sender the actor that signed the messages
     * @param new_admin address to be set
     * @param contract the address of the smart contract
     */
    constructor(sender, new_admin, contract) {
        super();
        this.sender = sender;
        this.new_admin = new_admin;
        this.contract = contract;
    }
    static fromAmino(data) {
        const { value: { sender, new_admin, contract }, } = data;
        return new MsgUpdateAdmin(sender, new_admin, contract);
    }
    toAmino() {
        const { sender, new_admin, contract } = this;
        return {
            type: 'wasm/MsgUpdateAdmin',
            value: {
                sender,
                new_admin,
                contract,
            },
        };
    }
    static fromData(data) {
        const { sender, new_admin, contract } = data;
        return new MsgUpdateAdmin(sender, new_admin, contract);
    }
    toData() {
        const { sender, new_admin, contract } = this;
        return {
            '@type': '/cosmwasm.wasm.v1.MsgUpdateAdmin',
            sender,
            new_admin,
            contract,
        };
    }
    static fromProto(data) {
        return new MsgUpdateAdmin(data.sender, data.newAdmin, data.contract);
    }
    toProto() {
        const { sender, new_admin, contract } = this;
        return tx_1.MsgUpdateAdmin.fromPartial({
            sender,
            newAdmin: new_admin,
            contract,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.MsgUpdateAdmin',
            value: tx_1.MsgUpdateAdmin.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgUpdateAdmin.fromProto(tx_1.MsgUpdateAdmin.decode(msgAny.value));
    }
}
exports.MsgUpdateAdmin = MsgUpdateAdmin;
//# sourceMappingURL=MsgUpdateAdmin.js.map