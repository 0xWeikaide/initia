"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgMigrateContract = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/tx");
const long_1 = __importDefault(require("long"));
class MsgMigrateContract extends json_1.JSONSerializable {
    /**
     * @param sender the actor that signed the messages
     * @param contract the address of the smart contract
     * @param code_id references the new WASM code
     * @param msg json encoded message to be passed to the contract on migration
     */
    constructor(sender, contract, code_id, msg) {
        super();
        this.sender = sender;
        this.contract = contract;
        this.code_id = code_id;
        this.msg = msg;
    }
    static fromAmino(data) {
        const { value: { sender, contract, code_id, msg }, } = data;
        return new MsgMigrateContract(sender, contract, Number.parseInt(code_id), msg);
    }
    toAmino() {
        const { sender, contract, code_id, msg } = this;
        return {
            type: 'wasm/MsgMigrateContract',
            value: {
                sender,
                contract,
                code_id: code_id.toString(),
                msg,
            },
        };
    }
    static fromData(data) {
        const { sender, contract, code_id, msg } = data;
        return new MsgMigrateContract(sender, contract, Number.parseInt(code_id), msg);
    }
    toData() {
        const { sender, contract, code_id, msg } = this;
        return {
            '@type': '/cosmwasm.wasm.v1.MsgMigrateContract',
            sender,
            contract,
            code_id: code_id.toString(),
            msg,
        };
    }
    static fromProto(data) {
        return new MsgMigrateContract(data.sender, data.contract, data.codeId.toNumber(), Buffer.from(data.msg).toString('base64'));
    }
    toProto() {
        const { sender, contract, code_id, msg } = this;
        return tx_1.MsgMigrateContract.fromPartial({
            sender,
            contract,
            codeId: long_1.default.fromNumber(code_id),
            msg: Buffer.from(msg, 'base64'),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.MsgMigrateContract',
            value: tx_1.MsgMigrateContract.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgMigrateContract.fromProto(tx_1.MsgMigrateContract.decode(msgAny.value));
    }
}
exports.MsgMigrateContract = MsgMigrateContract;
//# sourceMappingURL=MsgMigrateContract.js.map