"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WasmParams = void 0;
const json_1 = require("../../util/json");
const types_1 = require("@initia/initia.proto/cosmwasm/wasm/v1/types");
const AccessConfig_1 = require("./AccessConfig");
class WasmParams extends json_1.JSONSerializable {
    /**
     * @param code_upload_access
     * @param instantiate_default_permission
     */
    constructor(code_upload_access, instantiate_default_permission) {
        super();
        this.code_upload_access = code_upload_access;
        this.instantiate_default_permission = instantiate_default_permission;
    }
    static fromAmino(data) {
        const { value: { code_upload_access, instantiate_default_permission }, } = data;
        return new WasmParams(AccessConfig_1.AccessConfig.fromAmino(code_upload_access), (0, types_1.accessTypeFromJSON)(instantiate_default_permission));
    }
    toAmino() {
        const { code_upload_access, instantiate_default_permission } = this;
        return {
            type: 'wasm/Params',
            value: {
                code_upload_access: code_upload_access.toAmino(),
                instantiate_default_permission: (0, types_1.accessTypeToJSON)(instantiate_default_permission),
            },
        };
    }
    static fromData(data) {
        const { code_upload_access, instantiate_default_permission } = data;
        return new WasmParams(AccessConfig_1.AccessConfig.fromData(code_upload_access), (0, types_1.accessTypeFromJSON)(instantiate_default_permission));
    }
    toData() {
        const { code_upload_access, instantiate_default_permission } = this;
        return {
            '@type': '/cosmwasm.wasm.v1.Params',
            code_upload_access: code_upload_access.toData(),
            instantiate_default_permission: (0, types_1.accessTypeToJSON)(instantiate_default_permission),
        };
    }
    static fromProto(data) {
        return new WasmParams(AccessConfig_1.AccessConfig.fromProto(data.codeUploadAccess), data.instantiateDefaultPermission);
    }
    toProto() {
        const { code_upload_access, instantiate_default_permission } = this;
        return types_1.Params.fromPartial({
            codeUploadAccess: code_upload_access.toProto(),
            instantiateDefaultPermission: instantiate_default_permission,
        });
    }
}
exports.WasmParams = WasmParams;
//# sourceMappingURL=WasmParams.js.map