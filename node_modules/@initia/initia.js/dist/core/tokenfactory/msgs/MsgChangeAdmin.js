"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgChangeAdmin = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/miniwasm/tokenfactory/v1/tx");
class MsgChangeAdmin extends json_1.JSONSerializable {
    /**
     * @param sender
     * @param denom
     * @param new_admin
     */
    constructor(sender, denom, new_admin) {
        super();
        this.sender = sender;
        this.denom = denom;
        this.new_admin = new_admin;
    }
    static fromAmino(data) {
        const { value: { sender, denom, new_admin }, } = data;
        return new MsgChangeAdmin(sender, denom, new_admin);
    }
    toAmino() {
        const { sender, denom, new_admin } = this;
        return {
            type: 'tokenfactory/MsgChangeAdmin',
            value: {
                sender,
                denom,
                new_admin,
            },
        };
    }
    static fromData(data) {
        const { sender, denom, new_admin } = data;
        return new MsgChangeAdmin(sender, denom, new_admin);
    }
    toData() {
        const { sender, denom, new_admin } = this;
        return {
            '@type': '/miniwasm.tokenfactory.v1.MsgChangeAdmin',
            sender,
            denom,
            new_admin,
        };
    }
    static fromProto(data) {
        return new MsgChangeAdmin(data.sender, data.denom, data.newAdmin);
    }
    toProto() {
        const { sender, denom, new_admin } = this;
        return tx_1.MsgChangeAdmin.fromPartial({
            sender,
            denom,
            newAdmin: new_admin,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/miniwasm.tokenfactory.v1.MsgChangeAdmin',
            value: tx_1.MsgChangeAdmin.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgChangeAdmin.fromProto(tx_1.MsgChangeAdmin.decode(msgAny.value));
    }
}
exports.MsgChangeAdmin = MsgChangeAdmin;
//# sourceMappingURL=MsgChangeAdmin.js.map