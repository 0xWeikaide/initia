import { JSONSerializable } from '../../../util/json';
import { Coin } from '../../Coin';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgForceTransfer as MsgForceTransfer_pb } from '@initia/initia.proto/miniwasm/tokenfactory/v1/tx';
export declare class MsgForceTransfer extends JSONSerializable<MsgForceTransfer.Amino, MsgForceTransfer.Data, MsgForceTransfer.Proto> {
    sender: AccAddress;
    amount: Coin;
    transfer_from_address: AccAddress;
    transfer_to_address: AccAddress;
    /**
     * @param sender
     * @param amount
     * @param transfer_from_address
     * @param transfer_to_address
     */
    constructor(sender: AccAddress, amount: Coin, transfer_from_address: AccAddress, transfer_to_address: AccAddress);
    static fromAmino(data: MsgForceTransfer.Amino): MsgForceTransfer;
    toAmino(): MsgForceTransfer.Amino;
    static fromData(data: MsgForceTransfer.Data): MsgForceTransfer;
    toData(): MsgForceTransfer.Data;
    static fromProto(data: MsgForceTransfer.Proto): MsgForceTransfer;
    toProto(): MsgForceTransfer.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgForceTransfer;
}
export declare namespace MsgForceTransfer {
    interface Amino {
        type: 'tokenfactory/MsgForceTransfer';
        value: {
            sender: AccAddress;
            amount: Coin.Amino;
            transfer_from_address: AccAddress;
            transfer_to_address: AccAddress;
        };
    }
    interface Data {
        '@type': '/miniwasm.tokenfactory.v1.MsgForceTransfer';
        sender: AccAddress;
        amount: Coin.Data;
        transfer_from_address: AccAddress;
        transfer_to_address: AccAddress;
    }
    type Proto = MsgForceTransfer_pb;
}
