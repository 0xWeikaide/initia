"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSetDenomMetadataWasm = void 0;
const json_1 = require("../../../util/json");
const DenomMetadata_1 = require("../../bank/DenomMetadata");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/miniwasm/tokenfactory/v1/tx");
class MsgSetDenomMetadataWasm extends json_1.JSONSerializable {
    /**
     * @param sender
     * @param metadata
     */
    constructor(sender, metadata) {
        super();
        this.sender = sender;
        this.metadata = metadata;
    }
    static fromAmino(data) {
        const { value: { sender, metadata }, } = data;
        return new MsgSetDenomMetadataWasm(sender, DenomMetadata_1.DenomMetadata.fromAmino(metadata));
    }
    toAmino() {
        const { sender, metadata } = this;
        return {
            type: 'tokenfactory/MsgSetDenomMetadata',
            value: {
                sender,
                metadata: metadata.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { sender, metadata } = data;
        return new MsgSetDenomMetadataWasm(sender, DenomMetadata_1.DenomMetadata.fromData(metadata));
    }
    toData() {
        const { sender, metadata } = this;
        return {
            '@type': '/miniwasm.tokenfactory.v1.MsgSetDenomMetadata',
            sender,
            metadata: metadata.toData(),
        };
    }
    static fromProto(data) {
        return new MsgSetDenomMetadataWasm(data.sender, DenomMetadata_1.DenomMetadata.fromProto(data.metadata));
    }
    toProto() {
        const { sender, metadata } = this;
        return tx_1.MsgSetDenomMetadata.fromPartial({
            sender,
            metadata: metadata.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/miniwasm.tokenfactory.v1.MsgSetDenomMetadata',
            value: tx_1.MsgSetDenomMetadata.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgSetDenomMetadataWasm.fromProto(tx_1.MsgSetDenomMetadata.decode(msgAny.value));
    }
}
exports.MsgSetDenomMetadataWasm = MsgSetDenomMetadataWasm;
//# sourceMappingURL=MsgSetDenomMetadataWasm.js.map