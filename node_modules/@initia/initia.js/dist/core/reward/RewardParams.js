"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RewardParams = void 0;
const json_1 = require("../../util/json");
const Duration_1 = require("../Duration");
const types_1 = require("@initia/initia.proto/initia/reward/v1/types");
class RewardParams extends json_1.JSONSerializable {
    /**
     * @param reward_denom
     * @param dilution_period
     * @param release_rate
     * @param dilution_rate dilution rate of release rate
     * @param release_enabled
     */
    constructor(reward_denom, dilution_period, release_rate, dilution_rate, release_enabled) {
        super();
        this.reward_denom = reward_denom;
        this.dilution_period = dilution_period;
        this.release_rate = release_rate;
        this.dilution_rate = dilution_rate;
        this.release_enabled = release_enabled;
    }
    static fromAmino(data) {
        const { value: { reward_denom, dilution_period, release_rate, dilution_rate, release_enabled, }, } = data;
        return new RewardParams(reward_denom, Duration_1.Duration.fromAmino(dilution_period), release_rate, dilution_rate, release_enabled);
    }
    toAmino() {
        const { reward_denom, dilution_period, release_rate, dilution_rate, release_enabled, } = this;
        return {
            type: 'reward/Params',
            value: {
                reward_denom,
                dilution_period: dilution_period.toAmino(),
                release_rate,
                dilution_rate,
                release_enabled,
            },
        };
    }
    static fromData(data) {
        const { reward_denom, dilution_period, release_rate, dilution_rate, release_enabled, } = data;
        return new RewardParams(reward_denom, Duration_1.Duration.fromData(dilution_period), release_rate, dilution_rate, release_enabled);
    }
    toData() {
        const { reward_denom, dilution_period, release_rate, dilution_rate, release_enabled, } = this;
        return {
            '@type': '/initia.reward.v1.Params',
            reward_denom,
            dilution_period: dilution_period.toData(),
            release_rate,
            dilution_rate,
            release_enabled,
        };
    }
    static fromProto(data) {
        return new RewardParams(data.rewardDenom, Duration_1.Duration.fromProto(data.dilutionPeriod), data.releaseRate, data.dilutionRate, data.releaseEnabled);
    }
    toProto() {
        const { reward_denom, dilution_period, release_rate, dilution_rate, release_enabled, } = this;
        return types_1.Params.fromPartial({
            rewardDenom: reward_denom,
            dilutionPeriod: dilution_period.toProto(),
            releaseRate: release_rate,
            dilutionRate: dilution_rate,
            releaseEnabled: release_enabled,
        });
    }
}
exports.RewardParams = RewardParams;
//# sourceMappingURL=RewardParams.js.map