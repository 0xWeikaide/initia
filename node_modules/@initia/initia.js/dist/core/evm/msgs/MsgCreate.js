"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgCreate = void 0;
const json_1 = require("../../../util/json");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/minievm/evm/v1/tx");
class MsgCreate extends json_1.JSONSerializable {
    /**
     * @param sender the actor that signed the messages
     * @param code hex encoded raw contract bytes code
     */
    constructor(sender, code) {
        super();
        this.sender = sender;
        this.code = code;
    }
    static fromAmino(data) {
        const { value: { sender, code }, } = data;
        return new MsgCreate(sender, code);
    }
    toAmino() {
        const { sender, code } = this;
        return {
            type: 'evm/MsgCreate',
            value: {
                sender,
                code,
            },
        };
    }
    static fromData(data) {
        const { sender, code } = data;
        return new MsgCreate(sender, code);
    }
    toData() {
        const { sender, code } = this;
        return {
            '@type': '/minievm.evm.v1.MsgCreate',
            sender,
            code,
        };
    }
    static fromProto(data) {
        return new MsgCreate(data.sender, data.code);
    }
    toProto() {
        const { sender, code } = this;
        return tx_1.MsgCreate.fromPartial({
            sender,
            code,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/minievm.evm.v1.MsgCreate',
            value: tx_1.MsgCreate.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgCreate.fromProto(tx_1.MsgCreate.decode(msgAny.value));
    }
}
exports.MsgCreate = MsgCreate;
//# sourceMappingURL=MsgCreate.js.map