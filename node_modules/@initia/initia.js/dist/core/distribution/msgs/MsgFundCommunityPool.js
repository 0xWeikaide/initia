"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgFundCommunityPool = void 0;
const json_1 = require("../../../util/json");
const Coins_1 = require("../../Coins");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/cosmos/distribution/v1beta1/tx");
class MsgFundCommunityPool extends json_1.JSONSerializable {
    /**
     * @param depositor depositor's account address
     * @param amount coins to fund the community pool
     */
    constructor(depositor, amount) {
        super();
        this.depositor = depositor;
        this.amount = new Coins_1.Coins(amount);
    }
    static fromAmino(data) {
        const { value: { depositor, amount }, } = data;
        return new MsgFundCommunityPool(depositor, Coins_1.Coins.fromAmino(amount));
    }
    toAmino() {
        const { depositor, amount } = this;
        return {
            type: 'cosmos-sdk/MsgFundCommunityPool',
            value: {
                depositor,
                amount: amount.toAmino(),
            },
        };
    }
    static fromData(proto) {
        const { depositor, amount } = proto;
        return new MsgFundCommunityPool(depositor, Coins_1.Coins.fromData(amount));
    }
    toData() {
        const { depositor, amount } = this;
        return {
            '@type': '/cosmos.distribution.v1beta1.MsgFundCommunityPool',
            depositor,
            amount: amount.toData(),
        };
    }
    static fromProto(proto) {
        return new MsgFundCommunityPool(proto.depositor, Coins_1.Coins.fromProto(proto.amount));
    }
    toProto() {
        const { depositor, amount } = this;
        return tx_1.MsgFundCommunityPool.fromPartial({
            amount: amount.toProto(),
            depositor,
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.distribution.v1beta1.MsgFundCommunityPool',
            value: tx_1.MsgFundCommunityPool.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgFundCommunityPool.fromProto(tx_1.MsgFundCommunityPool.decode(msgAny.value));
    }
}
exports.MsgFundCommunityPool = MsgFundCommunityPool;
//# sourceMappingURL=MsgFundCommunityPool.js.map