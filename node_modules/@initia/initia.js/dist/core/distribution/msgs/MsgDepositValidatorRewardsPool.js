"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgDepositValidatorRewardsPool = void 0;
const json_1 = require("../../../util/json");
const Coins_1 = require("../../Coins");
const any_1 = require("@initia/initia.proto/google/protobuf/any");
const tx_1 = require("@initia/initia.proto/initia/distribution/v1/tx");
class MsgDepositValidatorRewardsPool extends json_1.JSONSerializable {
    /**
     * @param depositor
     * @param validator_address
     * @param denom
     * @param amount
     */
    constructor(depositor, validator_address, denom, amount) {
        super();
        this.depositor = depositor;
        this.validator_address = validator_address;
        this.denom = denom;
        this.amount = new Coins_1.Coins(amount);
    }
    static fromAmino(data) {
        const { value: { depositor, validator_address, denom, amount }, } = data;
        return new MsgDepositValidatorRewardsPool(depositor, validator_address, denom, Coins_1.Coins.fromAmino(amount));
    }
    toAmino() {
        const { depositor, validator_address, denom, amount } = this;
        return {
            type: 'cosmos-sdk/distr/MsgDepositValRewards',
            value: {
                depositor,
                validator_address,
                denom,
                amount: amount.toAmino(),
            },
        };
    }
    static fromData(data) {
        const { depositor, validator_address, denom, amount } = data;
        return new MsgDepositValidatorRewardsPool(depositor, validator_address, denom, Coins_1.Coins.fromData(amount));
    }
    toData() {
        const { depositor, validator_address, denom, amount } = this;
        return {
            '@type': '/initia.distribution.v1.MsgDepositValidatorRewardsPool',
            depositor,
            validator_address,
            denom,
            amount: amount.toData(),
        };
    }
    static fromProto(proto) {
        return new MsgDepositValidatorRewardsPool(proto.depositor, proto.validatorAddress, proto.denom, Coins_1.Coins.fromProto(proto.amount));
    }
    toProto() {
        const { depositor, validator_address, denom, amount } = this;
        return tx_1.MsgDepositValidatorRewardsPool.fromPartial({
            depositor,
            validatorAddress: validator_address,
            denom,
            amount: amount.toProto(),
        });
    }
    packAny() {
        return any_1.Any.fromPartial({
            typeUrl: '/initia.distribution.v1.MsgDepositValidatorRewardsPool',
            value: tx_1.MsgDepositValidatorRewardsPool.encode(this.toProto()).finish(),
        });
    }
    static unpackAny(msgAny) {
        return MsgDepositValidatorRewardsPool.fromProto(tx_1.MsgDepositValidatorRewardsPool.decode(msgAny.value));
    }
}
exports.MsgDepositValidatorRewardsPool = MsgDepositValidatorRewardsPool;
//# sourceMappingURL=MsgDepositValidatorRewardsPool.js.map